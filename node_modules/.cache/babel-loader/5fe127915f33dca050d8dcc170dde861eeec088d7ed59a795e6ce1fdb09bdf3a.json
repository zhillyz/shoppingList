{"ast":null,"code":"var _jsxFileName = \"/home/zhillyz/shoppingList/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleRecipeChange = event => {\n      this.setState({\n        currentRecipe: event.target.value\n      });\n    };\n    this.addOwnedIngredient = () => {\n      const ingredient = window.prompt('Enter the ingredient:');\n      const quantity = window.prompt('Enter the quantity:');\n      if (ingredient && quantity) {\n        const updatedOwnedIngredients = {\n          ...this.state.ownedIngredients,\n          [ingredient]: parseInt(quantity, 10)\n        };\n        this.setState({\n          ownedIngredients: updatedOwnedIngredients\n        }, () => {\n          this.updateShoppingListFromOwned();\n        });\n      }\n    };\n    this.handleStoredRecipeClick = recipeName => {\n      const {\n        recipes\n      } = this.state;\n      const recipeIngredients = recipes[recipeName];\n      if (recipeIngredients) {\n        this.updateShoppingList(recipeIngredients);\n      }\n    };\n    this.deleteRecipe = recipeName => {\n      const {\n        recipes\n      } = this.state;\n      const updatedRecipes = {\n        ...recipes\n      };\n      delete updatedRecipes[recipeName];\n      this.setState({\n        recipes: updatedRecipes\n      });\n    };\n    this.addRecipe = () => {\n      const {\n        recipes,\n        currentRecipe\n      } = this.state;\n      if (currentRecipe.trim() === '') {\n        return;\n      }\n      const recipeIngredients = recipes[currentRecipe];\n      if (recipeIngredients) {\n        this.updateShoppingList(recipeIngredients);\n      } else {\n        const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n        if (confirmAddRecipe) {\n          this.addNewRecipe(currentRecipe);\n        }\n      }\n    };\n    this.updateShoppingList = ingredients => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const updatedShoppingList = {\n        ...this.state.shoppingList\n      };\n      ingredients.forEach(ingredient => {\n        const spaceIndex = ingredient.indexOf(' ');\n        let quantity;\n        let ingredientName;\n        if (spaceIndex === -1) {\n          quantity = '1';\n          ingredientName = ingredient;\n        } else {\n          quantity = ingredient.slice(0, spaceIndex);\n          ingredientName = ingredient.slice(spaceIndex + 1);\n        }\n        const parsedQuantity = this.parseQuantity(quantity);\n        const remainingQuantity = parsedQuantity - (ownedIngredients[ingredientName] || 0);\n        if (remainingQuantity > 0) {\n          updatedShoppingList[ingredientName] = (updatedShoppingList[ingredientName] || 0) + remainingQuantity;\n        }\n      });\n      this.setState({\n        currentRecipe: '',\n        shoppingList: updatedShoppingList\n      }, () => {\n        this.updateShoppingListFromOwned();\n      });\n    };\n    this.updateShoppingListFromOwned = () => {\n      const {\n        shoppingList,\n        ownedIngredients\n      } = this.state;\n      const updatedShoppingList = {\n        ...shoppingList\n      };\n      for (const [ingredient, ownedQuantity] of Object.entries(ownedIngredients)) {\n        if (ownedQuantity > 0 && updatedShoppingList[ingredient]) {\n          updatedShoppingList[ingredient] -= ownedQuantity;\n          if (updatedShoppingList[ingredient] <= 0) {\n            delete updatedShoppingList[ingredient];\n          }\n        }\n      }\n      this.setState({\n        shoppingList: updatedShoppingList\n      });\n    };\n    this.addNewRecipe = recipeName => {\n      const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n      if (ingredients) {\n        const recipeIngredients = ingredients.split(',').map(ingredient => ingredient.trim());\n        const {\n          recipes\n        } = this.state;\n        const updatedRecipes = {\n          ...recipes,\n          [recipeName]: recipeIngredients\n        };\n        this.setState({\n          recipes: updatedRecipes\n        }, () => {\n          this.updateShoppingList(recipeIngredients);\n        });\n      }\n    };\n    this.clearShoppingList = () => {\n      this.setState({\n        shoppingList: {}\n      });\n    };\n    this.parseQuantity = quantity => {\n      if (quantity.trim() === '') {\n        return 1; // Default to 1 if no quantity is provided\n      }\n\n      if (quantity.includes('/')) {\n        const [numerator, denominator] = quantity.split('/');\n        return parseFloat(numerator) / parseFloat(denominator);\n      }\n      return parseFloat(quantity);\n    };\n    this.removeOwnedIngredient = ingredient => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const updatedIngredients = {\n        ...ownedIngredients\n      };\n      delete updatedIngredients[ingredient];\n      this.setState({\n        ownedIngredients: updatedIngredients\n      });\n    };\n    this.handleAddRecipe = recipe => {\n      const {\n        shoppingList\n      } = this.state;\n      const updatedShoppingList = {\n        ...shoppingList\n      };\n      recipe.ingredients.forEach(ingredient => {\n        const {\n          name,\n          quantity\n        } = ingredient;\n        if (updatedShoppingList[name]) {\n          updatedShoppingList[name] += quantity;\n        } else {\n          updatedShoppingList[name] = quantity;\n        }\n      });\n      this.setState({\n        shoppingList: updatedShoppingList\n      });\n    };\n    this.handleOwnedIngredientChange = (event, ingredient) => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const quantity = event.target.value.trim() === '' ? '' : parseInt(event.target.value, 10);\n      const updatedOwnedIngredients = {\n        ...ownedIngredients,\n        [ingredient]: quantity\n      };\n      this.setState({\n        ownedIngredients: updatedOwnedIngredients\n      }, () => {\n        this.updateShoppingListFromOwned();\n      });\n    };\n    this.renderShoppingList = () => {\n      const {\n        shoppingList,\n        ownedIngredients\n      } = this.state;\n      return Object.keys(shoppingList).map((ingredientName, index) => {\n        var _ownedIngredients$ing;\n        const shoppingQuantity = shoppingList[ingredientName];\n        const ownedQuantity = ((_ownedIngredients$ing = ownedIngredients[ingredientName]) === null || _ownedIngredients$ing === void 0 ? void 0 : _ownedIngredients$ing.quantity) || 0;\n        const remainingQuantity = shoppingQuantity - ownedQuantity;\n        if (remainingQuantity <= 0) {\n          return null; // Skip rendering if the ingredient is fully owned\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [remainingQuantity, \" \", ingredientName]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this);\n      });\n    };\n    this.renderOwnedIngredients = () => {\n      const {\n        ownedIngredients\n      } = this.state;\n      return Object.keys(ownedIngredients).map((ingredientName, index) => {\n        const quantity = ownedIngredients[ingredientName].quantity;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: quantity,\n            onChange: event => this.handleOwnedIngredientChange(event, ingredientName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 11\n          }, this), ' ', ingredientName]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }, this);\n      });\n    };\n    const storedRecipes = localStorage.getItem('recipes');\n    const storedShoppingList = localStorage.getItem('shoppingList');\n    const storedOwnedIngredients = localStorage.getItem('ownedIngredients');\n    this.state = {\n      recipes: storedRecipes ? JSON.parse(storedRecipes) : {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper']\n      },\n      currentRecipe: '',\n      shoppingList: storedShoppingList ? JSON.parse(storedShoppingList) : {},\n      ownedIngredients: storedOwnedIngredients ? JSON.parse(storedOwnedIngredients) : {}\n    };\n  }\n  componentDidUpdate() {\n    localStorage.setItem('recipes', JSON.stringify(this.state.recipes));\n    localStorage.setItem('shoppingList', JSON.stringify(this.state.shoppingList));\n    localStorage.setItem('ownedIngredients', JSON.stringify(this.state.ownedIngredients));\n  }\n  render() {\n    const {\n      currentRecipe,\n      shoppingList,\n      recipes,\n      ownedIngredients\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recipe App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentRecipe,\n          onChange: this.handleRecipeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addRecipe,\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shopping-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shopping List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), Object.keys(shoppingList).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No items in the shopping list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(shoppingList).map((_ref, index) => {\n              let [ingredient, quantity] = _ref;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [quantity, \" \", ingredient]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.clearShoppingList,\n            children: \"Clear Shopping List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stored-recipes\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Stored Recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), Object.keys(recipes).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No recipes stored\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Object.keys(recipes).map((recipeName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-name\",\n                children: recipeName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"add-button\",\n                onClick: () => this.handleStoredRecipeClick(recipeName),\n                children: \"Add to Shopping List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => this.deleteRecipe(recipeName),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"owned-ingredients\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Owned Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), Object.entries(ownedIngredients).map((_ref2, index) => {\n            let [ingredient, quantity] = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"owned-ingredient\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: ingredient,\n                onChange: event => this.handleOwnedIngredientChange(event, ingredient)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: quantity,\n                onChange: event => this.handleOwnedIngredientChange(event, ingredient)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.removeOwnedIngredient(ingredient),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addOwnedIngredient,\n            children: \"Add Ingredient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RecipeApp;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RecipeApp","Component","constructor","props","handleRecipeChange","event","setState","currentRecipe","target","value","addOwnedIngredient","ingredient","window","prompt","quantity","updatedOwnedIngredients","state","ownedIngredients","parseInt","updateShoppingListFromOwned","handleStoredRecipeClick","recipeName","recipes","recipeIngredients","updateShoppingList","deleteRecipe","updatedRecipes","addRecipe","trim","confirmAddRecipe","confirm","addNewRecipe","ingredients","updatedShoppingList","shoppingList","forEach","spaceIndex","indexOf","ingredientName","slice","parsedQuantity","parseQuantity","remainingQuantity","ownedQuantity","Object","entries","split","map","clearShoppingList","includes","numerator","denominator","parseFloat","removeOwnedIngredient","updatedIngredients","handleAddRecipe","recipe","name","handleOwnedIngredientChange","renderShoppingList","keys","index","_ownedIngredients$ing","shoppingQuantity","children","fileName","_jsxFileName","lineNumber","columnNumber","renderOwnedIngredients","type","onChange","storedRecipes","localStorage","getItem","storedShoppingList","storedOwnedIngredients","JSON","parse","Pancakes","Salad","componentDidUpdate","setItem","stringify","render","className","onClick","length","_ref","_ref2"],"sources":["/home/zhillyz/shoppingList/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const storedRecipes = localStorage.getItem('recipes');\n    const storedShoppingList = localStorage.getItem('shoppingList');\n    const storedOwnedIngredients = localStorage.getItem('ownedIngredients');\n\n    this.state = {\n      recipes: storedRecipes ? JSON.parse(storedRecipes) : {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper'],\n      },\n      currentRecipe: '',\n      shoppingList: storedShoppingList ? JSON.parse(storedShoppingList) : {},\n      ownedIngredients: storedOwnedIngredients ? JSON.parse(storedOwnedIngredients) : {},\n    };\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('recipes', JSON.stringify(this.state.recipes));\n    localStorage.setItem('shoppingList', JSON.stringify(this.state.shoppingList));\n    localStorage.setItem('ownedIngredients', JSON.stringify(this.state.ownedIngredients));\n  }\n\n  handleRecipeChange = (event) => {\n    this.setState({ currentRecipe: event.target.value });\n  };\n\n  addOwnedIngredient = () => {\n    const ingredient = window.prompt('Enter the ingredient:');\n    const quantity = window.prompt('Enter the quantity:');\n  \n    if (ingredient && quantity) {\n      const updatedOwnedIngredients = { ...this.state.ownedIngredients, [ingredient]: parseInt(quantity, 10) };\n      this.setState({ ownedIngredients: updatedOwnedIngredients }, () => {\n        this.updateShoppingListFromOwned();\n      });\n    }\n  };\n\n  handleStoredRecipeClick = (recipeName) => {\n    const { recipes } = this.state;\n    const recipeIngredients = recipes[recipeName];\n    if (recipeIngredients) {\n      this.updateShoppingList(recipeIngredients);\n    }\n  };\n  \n  deleteRecipe = (recipeName) => {\n    const { recipes } = this.state;\n    const updatedRecipes = { ...recipes };\n    delete updatedRecipes[recipeName];\n    this.setState({ recipes: updatedRecipes });\n  };\n\n  addRecipe = () => {\n    const { recipes, currentRecipe } = this.state;\n\n    if (currentRecipe.trim() === '') {\n      return;\n    }\n\n    const recipeIngredients = recipes[currentRecipe];\n    if (recipeIngredients) {\n      this.updateShoppingList(recipeIngredients);\n    } else {\n      const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n      if (confirmAddRecipe) {\n        this.addNewRecipe(currentRecipe);\n      }\n    }\n  };\n\n  updateShoppingList = (ingredients) => {\n    const { ownedIngredients } = this.state;\n    const updatedShoppingList = { ...this.state.shoppingList };\n  \n    ingredients.forEach((ingredient) => {\n      const spaceIndex = ingredient.indexOf(' ');\n      let quantity;\n      let ingredientName;\n  \n      if (spaceIndex === -1) {\n        quantity = '1';\n        ingredientName = ingredient;\n      } else {\n        quantity = ingredient.slice(0, spaceIndex);\n        ingredientName = ingredient.slice(spaceIndex + 1);\n      }\n  \n      const parsedQuantity = this.parseQuantity(quantity);\n      const remainingQuantity = parsedQuantity - (ownedIngredients[ingredientName] || 0);\n  \n      if (remainingQuantity > 0) {\n        updatedShoppingList[ingredientName] = (updatedShoppingList[ingredientName] || 0) + remainingQuantity;\n      }\n    });\n  \n    this.setState(\n      {\n        currentRecipe: '',\n        shoppingList: updatedShoppingList,\n      },\n      () => {\n        this.updateShoppingListFromOwned();\n      }\n    );\n  };\n  \n\n  updateShoppingListFromOwned = () => {\n    const { shoppingList, ownedIngredients } = this.state;\n  \n    const updatedShoppingList = { ...shoppingList };\n  \n    for (const [ingredient, ownedQuantity] of Object.entries(ownedIngredients)) {\n      if (ownedQuantity > 0 && updatedShoppingList[ingredient]) {\n        updatedShoppingList[ingredient] -= ownedQuantity;\n        if (updatedShoppingList[ingredient] <= 0) {\n          delete updatedShoppingList[ingredient];\n        }\n      }\n    }\n  \n    this.setState({ shoppingList: updatedShoppingList });\n  };\n  \n  \n  \n  \n  \n  \n\n  addNewRecipe = (recipeName) => {\n    const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n\n    if (ingredients) {\n      const recipeIngredients = ingredients.split(',').map((ingredient) => ingredient.trim());\n      const { recipes } = this.state;\n\n      const updatedRecipes = { ...recipes, [recipeName]: recipeIngredients };\n      this.setState({ recipes: updatedRecipes }, () => {\n        this.updateShoppingList(recipeIngredients);\n      });\n    }\n  };\n\n  clearShoppingList = () => {\n    this.setState({ shoppingList: {} });\n  };\n\n  parseQuantity = (quantity) => {\n    if (quantity.trim() === '') {\n      return 1; // Default to 1 if no quantity is provided\n    }\n\n    if (quantity.includes('/')) {\n      const [numerator, denominator] = quantity.split('/');\n      return parseFloat(numerator) / parseFloat(denominator);\n    }\n\n    return parseFloat(quantity);\n  };\n\n  removeOwnedIngredient = (ingredient) => {\n    const { ownedIngredients } = this.state;\n    const updatedIngredients = { ...ownedIngredients };\n  \n    delete updatedIngredients[ingredient];\n  \n    this.setState({ ownedIngredients: updatedIngredients });\n  };\n  \n  handleAddRecipe = (recipe) => {\n    const { shoppingList } = this.state;\n    const updatedShoppingList = { ...shoppingList };\n  \n    recipe.ingredients.forEach((ingredient) => {\n      const { name, quantity } = ingredient;\n  \n      if (updatedShoppingList[name]) {\n        updatedShoppingList[name] += quantity;\n      } else {\n        updatedShoppingList[name] = quantity;\n      }\n    });\n  \n    this.setState({ shoppingList: updatedShoppingList });\n  };\n  \n\n  handleOwnedIngredientChange = (event, ingredient) => {\n    const { ownedIngredients } = this.state;\n    const quantity = event.target.value.trim() === '' ? '' : parseInt(event.target.value, 10);\n  \n    const updatedOwnedIngredients = {\n      ...ownedIngredients,\n      [ingredient]: quantity,\n    };\n  \n    this.setState({ ownedIngredients: updatedOwnedIngredients }, () => {\n      this.updateShoppingListFromOwned();\n    });\n  }; \n  \n\n  renderShoppingList = () => {\n    const { shoppingList, ownedIngredients } = this.state;\n\n    return Object.keys(shoppingList).map((ingredientName, index) => {\n      const shoppingQuantity = shoppingList[ingredientName];\n      const ownedQuantity = ownedIngredients[ingredientName]?.quantity || 0;\n      const remainingQuantity = shoppingQuantity - ownedQuantity;\n\n      if (remainingQuantity <= 0) {\n        return null; // Skip rendering if the ingredient is fully owned\n      }\n\n      return (\n        <div key={index}>\n          {remainingQuantity} {ingredientName}\n        </div>\n      );\n    });\n  };\n\n  renderOwnedIngredients = () => {\n    const { ownedIngredients } = this.state;\n\n    return Object.keys(ownedIngredients).map((ingredientName, index) => {\n      const quantity = ownedIngredients[ingredientName].quantity;\n\n      return (\n        <div key={index}>\n          <input\n            type=\"number\"\n            value={quantity}\n            onChange={(event) => this.handleOwnedIngredientChange(event, ingredientName)}\n          />{' '}\n          {ingredientName}\n        </div>\n      );\n    });\n  };\n\n  render() {\n    const { currentRecipe, shoppingList, recipes, ownedIngredients } = this.state;\n  \n    return (\n      <div className=\"center-container\">\n        <h1>Recipe App</h1>\n        <div>\n          <input type=\"text\" value={currentRecipe} onChange={this.handleRecipeChange} />\n          <button onClick={this.addRecipe}>Add Recipe</button>\n        </div>\n        <div className=\"shopping-list\">\n          <h2>Shopping List</h2>\n          {Object.keys(shoppingList).length === 0 ? (\n            <p>No items in the shopping list</p>\n          ) : (\n            <div>\n              <ul>\n                {Object.entries(shoppingList).map(([ingredient, quantity], index) => (\n                  <li key={index}>\n                    {quantity} {ingredient}\n                  </li>\n                ))}\n              </ul>\n              <button onClick={this.clearShoppingList}>Clear Shopping List</button>\n            </div>\n          )}\n        </div>\n        <div className=\"recipe-container\">\n          <div className=\"stored-recipes\">\n            <h2>Stored Recipes</h2>\n            {Object.keys(recipes).length === 0 ? (\n              <p>No recipes stored</p>\n            ) : (\n              <div>\n                {Object.keys(recipes).map((recipeName, index) => (\n                  <div key={index} className=\"recipe-box\">\n                    <span className=\"recipe-name\">{recipeName}</span>\n                    <button className=\"add-button\" onClick={() => this.handleStoredRecipeClick(recipeName)}>\n                      Add to Shopping List\n                    </button>\n                    <button className=\"delete-button\" onClick={() => this.deleteRecipe(recipeName)}>\n                      &times;\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          <div className=\"owned-ingredients\">\n            <h2>Owned Ingredients</h2>\n              {Object.entries(ownedIngredients).map(([ingredient, quantity], index) => (\n              <div key={index} className=\"owned-ingredient\">\n                <input\n                  type=\"text\"\n                  value={ingredient}\n                  onChange={(event) => this.handleOwnedIngredientChange(event, ingredient)}\n                />\n                <input\n                  type=\"number\"\n                  value={quantity}\n                  onChange={(event) => this.handleOwnedIngredientChange(event, ingredient)}\n                />\n                <button onClick={() => this.removeOwnedIngredient(ingredient)}>Remove</button>\n              </div>\n            ))}\n            <button onClick={this.addOwnedIngredient}>Add Ingredient</button>\n          </div>\n        </div>\n      </div>\n    );\n  }  \n  \n}\n\nexport default RecipeApp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}