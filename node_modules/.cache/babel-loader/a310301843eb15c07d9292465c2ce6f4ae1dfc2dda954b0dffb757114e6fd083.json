{"ast":null,"code":"var _jsxFileName = \"/home/zhillyz/gptimesaver/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const [selectedWord, setSelectedWord] = useState('');\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleWordClick = word => {\n    setSelectedWord(word);\n  };\n  const processInputText = () => {\n    setOutputText(inputText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputText,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: processInputText,\n      children: \"Process Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: outputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Words:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: outputText.split(' ').map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleWordClick(word),\n          style: {\n            cursor: 'pointer',\n            marginRight: '5px'\n          },\n          children: word\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Word:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MFb2gnDBggXfXsV3SnshrNiChSw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","outputText","setOutputText","selectedWord","setSelectedWord","handleInputChange","event","target","value","handleWordClick","word","processInputText","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","split","map","index","style","cursor","marginRight","_c","$RefreshReg$"],"sources":["/home/zhillyz/gptimesaver/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const [selectedWord, setSelectedWord] = useState('');\n\n  const handleInputChange = (event) => {\n    setInputText(event.target.value);\n  };\n\n  const handleWordClick = (word) => {\n    setSelectedWord(word);\n  };\n\n  const processInputText = () => {\n    setOutputText(inputText);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={inputText} onChange={handleInputChange} />\n      <button onClick={processInputText}>Process Text</button>\n      <div>\n        <h2>Output:</h2>\n        <p>{outputText}</p>\n      </div>\n      <div>\n        <h2>Words:</h2>\n        <p>\n          {outputText.split(' ').map((word, index) => (\n            <span\n              key={index}\n              onClick={() => handleWordClick(word)}\n              style={{ cursor: 'pointer', marginRight: '5px' }}\n            >\n              {word}\n            </span>\n          ))}\n        </p>\n      </div>\n      <div>\n        <h2>Selected Word:</h2>\n        <p>{selectedWord}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}