{"ast":null,"code":"var _jsxFileName = \"/home/zhillyz/shoppingList/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleRecipeChange = event => {\n      this.setState({\n        currentRecipe: event.target.value\n      });\n    };\n    this.addRecipe = () => {\n      const {\n        recipes,\n        currentRecipe\n      } = this.state;\n      if (currentRecipe.trim() === '') {\n        return;\n      }\n      const recipeIngredients = recipes[currentRecipe];\n      if (recipeIngredients) {\n        this.updateShoppingList(recipeIngredients);\n      } else {\n        const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n        if (confirmAddRecipe) {\n          this.addNewRecipe(currentRecipe);\n        }\n      }\n    };\n    this.updateShoppingList = ingredients => {\n      const updatedShoppingList = {\n        ...this.state.shoppingList\n      };\n      ingredients.forEach(ingredient => {\n        const spaceIndex = ingredient.indexOf(' ');\n        const quantity = ingredient.slice(0, spaceIndex);\n        const ingredientName = ingredient.slice(spaceIndex + 1);\n        let parsedQuantity;\n        if (quantity) {\n          parsedQuantity = this.parseQuantity(quantity);\n        } else {\n          parsedQuantity = 1;\n        }\n        if (updatedShoppingList[ingredientName]) {\n          updatedShoppingList[ingredientName] += parsedQuantity;\n        } else {\n          updatedShoppingList[ingredientName] = parsedQuantity;\n        }\n      });\n      this.setState({\n        currentRecipe: '',\n        shoppingList: updatedShoppingList\n      });\n    };\n    this.addNewRecipe = recipeName => {\n      const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n      if (ingredients) {\n        const recipeIngredients = ingredients.split(',').map(ingredient => ingredient.trim());\n        const {\n          recipes\n        } = this.state;\n        const updatedRecipes = {\n          ...recipes,\n          [recipeName]: recipeIngredients\n        };\n        this.setState({\n          recipes: updatedRecipes\n        }, () => {\n          this.updateShoppingList(recipeIngredients);\n        });\n      }\n    };\n    this.parseQuantity = quantity => {\n      if (quantity.includes('/')) {\n        const [numerator, denominator] = quantity.split('/');\n        return parseFloat(numerator) / parseFloat(denominator);\n      }\n      return parseFloat(quantity);\n    };\n    this.state = {\n      recipes: {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper']\n      },\n      currentRecipe: '',\n      shoppingList: {}\n    };\n  }\n  render() {\n    const {\n      currentRecipe,\n      shoppingList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recipe App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentRecipe,\n          onChange: this.handleRecipeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addRecipe,\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shopping List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), Object.keys(shoppingList).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No items in the shopping list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(shoppingList).map((_ref, index) => {\n            let [ingredient, quantity] = _ref;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [quantity, \" \", ingredient]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RecipeApp;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RecipeApp","Component","constructor","props","handleRecipeChange","event","setState","currentRecipe","target","value","addRecipe","recipes","state","trim","recipeIngredients","updateShoppingList","confirmAddRecipe","window","confirm","addNewRecipe","ingredients","updatedShoppingList","shoppingList","forEach","ingredient","spaceIndex","indexOf","quantity","slice","ingredientName","parsedQuantity","parseQuantity","recipeName","prompt","split","map","updatedRecipes","includes","numerator","denominator","parseFloat","Pancakes","Salad","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","Object","keys","length","entries","_ref","index"],"sources":["/home/zhillyz/shoppingList/src/App.js"],"sourcesContent":["import React from 'react';\n\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper'],\n      },\n      currentRecipe: '',\n      shoppingList: {},\n    };\n  }\n\n  handleRecipeChange = (event) => {\n    this.setState({ currentRecipe: event.target.value });\n  };\n\n  addRecipe = () => {\n    const { recipes, currentRecipe } = this.state;\n\n    if (currentRecipe.trim() === '') {\n      return;\n    }\n\n    const recipeIngredients = recipes[currentRecipe];\n    if (recipeIngredients) {\n      this.updateShoppingList(recipeIngredients);\n    } else {\n      const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n      if (confirmAddRecipe) {\n        this.addNewRecipe(currentRecipe);\n      }\n    }\n  };\n\n  updateShoppingList = (ingredients) => {\n    const updatedShoppingList = { ...this.state.shoppingList };\n\n    ingredients.forEach((ingredient) => {\n      const spaceIndex = ingredient.indexOf(' ');\n      const quantity = ingredient.slice(0, spaceIndex);\n      const ingredientName = ingredient.slice(spaceIndex + 1);\n\n      let parsedQuantity;\n      if (quantity) {\n        parsedQuantity = this.parseQuantity(quantity);\n      } else {\n        parsedQuantity = 1;\n      }\n\n      if (updatedShoppingList[ingredientName]) {\n        updatedShoppingList[ingredientName] += parsedQuantity;\n      } else {\n        updatedShoppingList[ingredientName] = parsedQuantity;\n      }\n    });\n\n    this.setState({\n      currentRecipe: '',\n      shoppingList: updatedShoppingList,\n    });\n  };\n\n  addNewRecipe = (recipeName) => {\n    const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n\n    if (ingredients) {\n      const recipeIngredients = ingredients.split(',').map((ingredient) => ingredient.trim());\n      const { recipes } = this.state;\n\n      const updatedRecipes = { ...recipes, [recipeName]: recipeIngredients };\n      this.setState({ recipes: updatedRecipes }, () => {\n        this.updateShoppingList(recipeIngredients);\n      });\n    }\n  };\n\n  parseQuantity = (quantity) => {\n    if (quantity.includes('/')) {\n      const [numerator, denominator] = quantity.split('/');\n      return parseFloat(numerator) / parseFloat(denominator);\n    }\n    return parseFloat(quantity);\n  };\n\n  render() {\n    const { currentRecipe, shoppingList } = this.state;\n\n    return (\n      <div>\n        <h1>Recipe App</h1>\n        <div>\n          <input type=\"text\" value={currentRecipe} onChange={this.handleRecipeChange} />\n          <button onClick={this.addRecipe}>Add Recipe</button>\n        </div>\n        <div>\n          <h2>Shopping List</h2>\n          {Object.keys(shoppingList).length === 0 ? (\n            <p>No items in the shopping list</p>\n          ) : (\n            <ul>\n              {Object.entries(shoppingList).map(([ingredient, quantity], index) => (\n                <li key={index}>\n                  {quantity} {ingredient}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RecipeApp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}