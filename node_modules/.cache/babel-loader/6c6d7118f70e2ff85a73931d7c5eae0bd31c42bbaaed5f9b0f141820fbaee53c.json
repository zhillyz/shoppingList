{"ast":null,"code":"var _jsxFileName = \"/home/zhillyz/shoppingList/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleRecipeChange = event => {\n      this.setState({\n        currentRecipe: event.target.value\n      });\n    };\n    this.addOwnedIngredient = () => {\n      const ingredient = window.prompt('Enter the ingredient:');\n      const quantity = window.prompt('Enter the quantity:');\n      if (ingredient && quantity) {\n        const updatedOwnedIngredients = {\n          ...this.state.ownedIngredients,\n          [ingredient]: quantity\n        };\n        this.setState({\n          ownedIngredients: updatedOwnedIngredients\n        });\n      }\n    };\n    this.addRecipe = () => {\n      const {\n        recipes,\n        currentRecipe\n      } = this.state;\n      if (currentRecipe.trim() === '') {\n        return;\n      }\n      const recipeIngredients = recipes[currentRecipe];\n      if (recipeIngredients) {\n        this.updateShoppingList(recipeIngredients);\n      } else {\n        const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n        if (confirmAddRecipe) {\n          this.addNewRecipe(currentRecipe);\n        }\n      }\n    };\n    this.updateShoppingList = ingredients => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const updatedShoppingList = {\n        ...this.state.shoppingList\n      };\n      ingredients.forEach(ingredient => {\n        const spaceIndex = ingredient.indexOf(' ');\n        let quantity;\n        let ingredientName;\n        if (spaceIndex === -1) {\n          quantity = '1';\n          ingredientName = ingredient;\n        } else {\n          quantity = ingredient.slice(0, spaceIndex);\n          ingredientName = ingredient.slice(spaceIndex + 1);\n        }\n        const parsedQuantity = this.parseQuantity(quantity);\n        const remainingQuantity = parsedQuantity - (updatedShoppingList[ingredientName] || 0);\n        const ownedIngredientCount = ownedIngredients[ingredientName] || 0;\n        if (remainingQuantity > 0) {\n          const quantityToAdd = Math.max(remainingQuantity - ownedIngredientCount, 0);\n          updatedShoppingList[ingredientName] = quantityToAdd;\n        }\n        ownedIngredients[ingredientName] = Math.max(ownedIngredientCount - parsedQuantity, 0);\n      });\n      this.setState({\n        currentRecipe: '',\n        shoppingList: updatedShoppingList,\n        ownedIngredients: ownedIngredients\n      });\n      this.updateShoppingListFromOwned();\n    };\n    this.updateShoppingListFromOwned = () => {\n      const {\n        shoppingList,\n        ownedIngredients\n      } = this.state;\n      const updatedShoppingList = {\n        ...shoppingList\n      };\n      for (const [ingredient, ownedQuantity] of Object.entries(ownedIngredients)) {\n        if (ownedQuantity > 0 && updatedShoppingList[ingredient]) {\n          updatedShoppingList[ingredient] = Math.max(updatedShoppingList[ingredient] - ownedQuantity, 0);\n        }\n      }\n      this.setState({\n        shoppingList: updatedShoppingList\n      });\n    };\n    this.addNewRecipe = recipeName => {\n      const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n      if (ingredients) {\n        const recipeIngredients = ingredients.split(',').map(ingredient => ingredient.trim());\n        const {\n          recipes\n        } = this.state;\n        const updatedRecipes = {\n          ...recipes,\n          [recipeName]: recipeIngredients\n        };\n        this.setState({\n          recipes: updatedRecipes\n        }, () => {\n          this.updateShoppingList(recipeIngredients);\n        });\n      }\n    };\n    this.clearShoppingList = () => {\n      this.setState({\n        shoppingList: {}\n      });\n    };\n    this.parseQuantity = quantity => {\n      if (quantity.trim() === '') {\n        return 1; // Default to 1 if no quantity is provided\n      }\n\n      if (quantity.includes('/')) {\n        const [numerator, denominator] = quantity.split('/');\n        return parseFloat(numerator) / parseFloat(denominator);\n      }\n      return parseFloat(quantity);\n    };\n    this.removeOwnedIngredient = ingredient => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const updatedIngredients = {\n        ...ownedIngredients\n      };\n      delete updatedIngredients[ingredient];\n      this.setState({\n        ownedIngredients: updatedIngredients\n      });\n    };\n    this.handleOwnedIngredientChange = (event, ingredient) => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const updatedIngredients = {\n        ...ownedIngredients\n      };\n      updatedIngredients[ingredient] = event.target.value;\n      this.setState({\n        ownedIngredients: updatedIngredients\n      });\n    };\n    this.renderShoppingList = () => {\n      const {\n        shoppingList,\n        ownedIngredients\n      } = this.state;\n      return Object.keys(shoppingList).map((ingredientName, index) => {\n        var _ownedIngredients$ing;\n        const shoppingQuantity = shoppingList[ingredientName];\n        const ownedQuantity = ((_ownedIngredients$ing = ownedIngredients[ingredientName]) === null || _ownedIngredients$ing === void 0 ? void 0 : _ownedIngredients$ing.quantity) || 0;\n        const remainingQuantity = shoppingQuantity - ownedQuantity;\n        if (remainingQuantity <= 0) {\n          return null; // Skip rendering if the ingredient is fully owned\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [remainingQuantity, \" \", ingredientName]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this);\n      });\n    };\n    this.renderOwnedIngredients = () => {\n      const {\n        ownedIngredients\n      } = this.state;\n      return Object.keys(ownedIngredients).map((ingredientName, index) => {\n        const quantity = ownedIngredients[ingredientName].quantity;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: quantity,\n            onChange: event => this.handleOwnedIngredientChange(event, ingredientName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 11\n          }, this), ' ', ingredientName]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this);\n      });\n    };\n    const storedRecipes = localStorage.getItem('recipes');\n    const storedShoppingList = localStorage.getItem('shoppingList');\n    const storedOwnedIngredients = localStorage.getItem('ownedIngredients');\n    this.state = {\n      recipes: storedRecipes ? JSON.parse(storedRecipes) : {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper']\n      },\n      currentRecipe: '',\n      shoppingList: storedShoppingList ? JSON.parse(storedShoppingList) : {},\n      ownedIngredients: storedOwnedIngredients ? JSON.parse(storedOwnedIngredients) : {}\n    };\n  }\n  componentDidUpdate() {\n    localStorage.setItem('recipes', JSON.stringify(this.state.recipes));\n    localStorage.setItem('shoppingList', JSON.stringify(this.state.shoppingList));\n    localStorage.setItem('ownedIngredients', JSON.stringify(this.state.ownedIngredients));\n  }\n  render() {\n    const {\n      currentRecipe,\n      shoppingList,\n      recipes,\n      ownedIngredients\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recipe App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentRecipe,\n          onChange: this.handleRecipeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addRecipe,\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shopping-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shopping List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), Object.keys(shoppingList).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No items in the shopping list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(shoppingList).map((_ref, index) => {\n              let [ingredient, quantity] = _ref;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [quantity, \" \", ingredient]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.clearShoppingList,\n            children: \"Clear Shopping List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stored-recipes\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Stored Recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), Object.keys(recipes).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No recipes stored\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Object.keys(recipes).map((recipeName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-box\",\n              onClick: () => this.updateShoppingList(recipes[recipeName]),\n              children: recipeName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"owned-ingredients\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Owned Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), Object.entries(ownedIngredients).map((_ref2, index) => {\n            let [ingredient, quantity] = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"owned-ingredient\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: ingredient,\n                onChange: event => this.handleOwnedIngredientChange(event, ingredient)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: quantity,\n                onChange: event => this.handleOwnedIngredientChange(event, ingredient)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.removeOwnedIngredient(ingredient),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addOwnedIngredient,\n            children: \"Add Ingredient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RecipeApp;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RecipeApp","Component","constructor","props","handleRecipeChange","event","setState","currentRecipe","target","value","addOwnedIngredient","ingredient","window","prompt","quantity","updatedOwnedIngredients","state","ownedIngredients","addRecipe","recipes","trim","recipeIngredients","updateShoppingList","confirmAddRecipe","confirm","addNewRecipe","ingredients","updatedShoppingList","shoppingList","forEach","spaceIndex","indexOf","ingredientName","slice","parsedQuantity","parseQuantity","remainingQuantity","ownedIngredientCount","quantityToAdd","Math","max","updateShoppingListFromOwned","ownedQuantity","Object","entries","recipeName","split","map","updatedRecipes","clearShoppingList","includes","numerator","denominator","parseFloat","removeOwnedIngredient","updatedIngredients","handleOwnedIngredientChange","renderShoppingList","keys","index","_ownedIngredients$ing","shoppingQuantity","children","fileName","_jsxFileName","lineNumber","columnNumber","renderOwnedIngredients","type","onChange","storedRecipes","localStorage","getItem","storedShoppingList","storedOwnedIngredients","JSON","parse","Pancakes","Salad","componentDidUpdate","setItem","stringify","render","onClick","className","length","_ref","_ref2"],"sources":["/home/zhillyz/shoppingList/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const storedRecipes = localStorage.getItem('recipes');\n    const storedShoppingList = localStorage.getItem('shoppingList');\n    const storedOwnedIngredients = localStorage.getItem('ownedIngredients');\n\n    this.state = {\n      recipes: storedRecipes ? JSON.parse(storedRecipes) : {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper'],\n      },\n      currentRecipe: '',\n      shoppingList: storedShoppingList ? JSON.parse(storedShoppingList) : {},\n      ownedIngredients: storedOwnedIngredients ? JSON.parse(storedOwnedIngredients) : {},\n    };\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('recipes', JSON.stringify(this.state.recipes));\n    localStorage.setItem('shoppingList', JSON.stringify(this.state.shoppingList));\n    localStorage.setItem('ownedIngredients', JSON.stringify(this.state.ownedIngredients));\n  }\n\n  handleRecipeChange = (event) => {\n    this.setState({ currentRecipe: event.target.value });\n  };\n\n  addOwnedIngredient = () => {\n    const ingredient = window.prompt('Enter the ingredient:');\n    const quantity = window.prompt('Enter the quantity:');\n  \n    if (ingredient && quantity) {\n      const updatedOwnedIngredients = { ...this.state.ownedIngredients, [ingredient]: quantity };\n      this.setState({ ownedIngredients: updatedOwnedIngredients });\n    }\n  };\n  \n\n  addRecipe = () => {\n    const { recipes, currentRecipe } = this.state;\n\n    if (currentRecipe.trim() === '') {\n      return;\n    }\n\n    const recipeIngredients = recipes[currentRecipe];\n    if (recipeIngredients) {\n      this.updateShoppingList(recipeIngredients);\n    } else {\n      const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n      if (confirmAddRecipe) {\n        this.addNewRecipe(currentRecipe);\n      }\n    }\n  };\n\n  updateShoppingList = (ingredients) => {\n    const { ownedIngredients } = this.state;\n    const updatedShoppingList = { ...this.state.shoppingList };\n  \n    ingredients.forEach((ingredient) => {\n      const spaceIndex = ingredient.indexOf(' ');\n      let quantity;\n      let ingredientName;\n  \n      if (spaceIndex === -1) {\n        quantity = '1';\n        ingredientName = ingredient;\n      } else {\n        quantity = ingredient.slice(0, spaceIndex);\n        ingredientName = ingredient.slice(spaceIndex + 1);\n      }\n  \n      const parsedQuantity = this.parseQuantity(quantity);\n      const remainingQuantity = parsedQuantity - (updatedShoppingList[ingredientName] || 0);\n      const ownedIngredientCount = ownedIngredients[ingredientName] || 0;\n  \n      if (remainingQuantity > 0) {\n        const quantityToAdd = Math.max(remainingQuantity - ownedIngredientCount, 0);\n        updatedShoppingList[ingredientName] = quantityToAdd;\n      }\n  \n      ownedIngredients[ingredientName] = Math.max(ownedIngredientCount - parsedQuantity, 0);\n    });\n  \n    this.setState({\n      currentRecipe: '',\n      shoppingList: updatedShoppingList,\n      ownedIngredients: ownedIngredients,\n    });\n\n    this.updateShoppingListFromOwned();\n  };\n\n  updateShoppingListFromOwned = () => {\n    const { shoppingList, ownedIngredients } = this.state;\n  \n    const updatedShoppingList = { ...shoppingList };\n  \n    for (const [ingredient, ownedQuantity] of Object.entries(ownedIngredients)) {\n      if (ownedQuantity > 0 && updatedShoppingList[ingredient]) {\n        updatedShoppingList[ingredient] = Math.max(updatedShoppingList[ingredient] - ownedQuantity, 0);\n      }\n    }\n  \n    this.setState({ shoppingList: updatedShoppingList });\n  };\n  \n  \n  \n  \n  \n\n  addNewRecipe = (recipeName) => {\n    const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n\n    if (ingredients) {\n      const recipeIngredients = ingredients.split(',').map((ingredient) => ingredient.trim());\n      const { recipes } = this.state;\n\n      const updatedRecipes = { ...recipes, [recipeName]: recipeIngredients };\n      this.setState({ recipes: updatedRecipes }, () => {\n        this.updateShoppingList(recipeIngredients);\n      });\n    }\n  };\n\n  clearShoppingList = () => {\n    this.setState({ shoppingList: {} });\n  };\n\n  parseQuantity = (quantity) => {\n    if (quantity.trim() === '') {\n      return 1; // Default to 1 if no quantity is provided\n    }\n\n    if (quantity.includes('/')) {\n      const [numerator, denominator] = quantity.split('/');\n      return parseFloat(numerator) / parseFloat(denominator);\n    }\n\n    return parseFloat(quantity);\n  };\n\n  removeOwnedIngredient = (ingredient) => {\n    const { ownedIngredients } = this.state;\n    const updatedIngredients = { ...ownedIngredients };\n  \n    delete updatedIngredients[ingredient];\n  \n    this.setState({ ownedIngredients: updatedIngredients });\n  };\n  \n\n  handleOwnedIngredientChange = (event, ingredient) => {\n    const { ownedIngredients } = this.state;\n    const updatedIngredients = { ...ownedIngredients };\n  \n    updatedIngredients[ingredient] = event.target.value;\n  \n    this.setState({ ownedIngredients: updatedIngredients });\n  };\n  \n\n  renderShoppingList = () => {\n    const { shoppingList, ownedIngredients } = this.state;\n\n    return Object.keys(shoppingList).map((ingredientName, index) => {\n      const shoppingQuantity = shoppingList[ingredientName];\n      const ownedQuantity = ownedIngredients[ingredientName]?.quantity || 0;\n      const remainingQuantity = shoppingQuantity - ownedQuantity;\n\n      if (remainingQuantity <= 0) {\n        return null; // Skip rendering if the ingredient is fully owned\n      }\n\n      return (\n        <div key={index}>\n          {remainingQuantity} {ingredientName}\n        </div>\n      );\n    });\n  };\n\n  renderOwnedIngredients = () => {\n    const { ownedIngredients } = this.state;\n\n    return Object.keys(ownedIngredients).map((ingredientName, index) => {\n      const quantity = ownedIngredients[ingredientName].quantity;\n\n      return (\n        <div key={index}>\n          <input\n            type=\"number\"\n            value={quantity}\n            onChange={(event) => this.handleOwnedIngredientChange(event, ingredientName)}\n          />{' '}\n          {ingredientName}\n        </div>\n      );\n    });\n  };\n\n  render() {\n    const { currentRecipe, shoppingList, recipes, ownedIngredients } = this.state;\n  \n    return (\n      <div>\n        <h1>Recipe App</h1>\n        <div>\n          <input type=\"text\" value={currentRecipe} onChange={this.handleRecipeChange} />\n          <button onClick={this.addRecipe}>Add Recipe</button>\n        </div>\n        <div className=\"shopping-list\">\n          <h2>Shopping List</h2>\n          {Object.keys(shoppingList).length === 0 ? (\n            <p>No items in the shopping list</p>\n          ) : (\n            <div>\n              <ul>\n                {Object.entries(shoppingList).map(([ingredient, quantity], index) => (\n                  <li key={index}>\n                    {quantity} {ingredient}\n                  </li>\n                ))}\n              </ul>\n              <button onClick={this.clearShoppingList}>Clear Shopping List</button>\n            </div>\n          )}\n        </div>\n        <div className=\"recipe-container\">\n          <div className=\"stored-recipes\">\n            <h2>Stored Recipes</h2>\n            {Object.keys(recipes).length === 0 ? (\n              <p>No recipes stored</p>\n            ) : (\n              <div>\n                {Object.keys(recipes).map((recipeName, index) => (\n                  <div\n                    key={index}\n                    className=\"recipe-box\"\n                    onClick={() => this.updateShoppingList(recipes[recipeName])}\n                  >\n                    {recipeName}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          <div className=\"owned-ingredients\">\n            <h2>Owned Ingredients</h2>\n              {Object.entries(ownedIngredients).map(([ingredient, quantity], index) => (\n              <div key={index} className=\"owned-ingredient\">\n                <input\n                  type=\"text\"\n                  value={ingredient}\n                  onChange={(event) => this.handleOwnedIngredientChange(event, ingredient)}\n                />\n                <input\n                  type=\"number\"\n                  value={quantity}\n                  onChange={(event) => this.handleOwnedIngredientChange(event, ingredient)}\n                />\n                <button onClick={() => this.removeOwnedIngredient(ingredient)}>Remove</button>\n              </div>\n            ))}\n            <button onClick={this.addOwnedIngredient}>Add Ingredient</button>\n          </div>\n        </div>\n      </div>\n    );\n  }  \n  \n}\n\nexport default RecipeApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}