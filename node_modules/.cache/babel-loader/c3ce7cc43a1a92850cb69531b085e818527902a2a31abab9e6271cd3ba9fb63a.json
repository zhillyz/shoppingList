{"ast":null,"code":"var _jsxFileName = \"/home/zhillyz/shoppingList/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport FuzzyMatch from 'fuzzy-match';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.findBestMatch = (ingredientName, recipeIngredients) => {\n      const matcher = new FuzzyMatch(recipeIngredients);\n      const bestMatch = matcher.find(ingredientName);\n      return bestMatch && bestMatch.value;\n    };\n    this.handleRecipeChange = event => {\n      this.setState({\n        currentRecipe: event.target.value\n      });\n    };\n    // Inside the addOwnedIngredient function\n    this.addOwnedIngredient = () => {\n      const ingredient = window.prompt('Enter the ingredient:');\n      const quantity = window.prompt('Enter the quantity:');\n      if (ingredient && quantity) {\n        const {\n          currentRecipe,\n          recipes\n        } = this.state;\n        const recipeIngredients = recipes[currentRecipe] || [];\n\n        // Use FuzzyMatch to find the best fuzzy match for the entered ingredient\n        const fuzzyMatcher = new FuzzyMatch(recipeIngredients);\n        const matchedIngredient = fuzzyMatcher.get(ingredient);\n        const updatedOwnedIngredients = {\n          ...this.state.ownedIngredients,\n          [matchedIngredient]: quantity\n        };\n        this.setState({\n          ownedIngredients: updatedOwnedIngredients\n        }, () => {\n          this.updateShoppingList(recipeIngredients); // Call updateShoppingList with the original recipeIngredients array\n        });\n      }\n    };\n    this.addRecipe = () => {\n      const {\n        recipes,\n        currentRecipe\n      } = this.state;\n      if (currentRecipe.trim() === '') {\n        return;\n      }\n      const recipeIngredients = recipes[currentRecipe];\n      if (recipeIngredients) {\n        this.updateShoppingList(recipeIngredients);\n      } else {\n        const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n        if (confirmAddRecipe) {\n          this.addNewRecipe(currentRecipe);\n        }\n      }\n    };\n    this.updateShoppingList = ingredients => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const updatedShoppingList = {\n        ...this.state.shoppingList\n      };\n      ingredients.forEach(ingredient => {\n        const spaceIndex = ingredient.indexOf(' ');\n        let quantity;\n        let ingredientName;\n        if (spaceIndex === -1) {\n          quantity = '1';\n          ingredientName = ingredient;\n        } else {\n          quantity = ingredient.slice(0, spaceIndex);\n          ingredientName = ingredient.slice(spaceIndex + 1);\n        }\n        const parsedQuantity = this.parseQuantity(quantity);\n        const remainingQuantity = parsedQuantity - (ownedIngredients[ingredientName] || 0);\n        if (remainingQuantity > 0) {\n          updatedShoppingList[ingredientName] = (updatedShoppingList[ingredientName] || 0) + remainingQuantity;\n        }\n      });\n      this.setState({\n        currentRecipe: '',\n        shoppingList: updatedShoppingList\n      }, () => {\n        this.updateShoppingListFromOwned();\n      });\n    };\n    this.updateShoppingListFromOwned = () => {\n      const {\n        shoppingList,\n        ownedIngredients\n      } = this.state;\n      const updatedShoppingList = {\n        ...shoppingList\n      };\n      for (const [ingredient, ownedQuantity] of Object.entries(ownedIngredients)) {\n        if (ownedQuantity >= 0 && updatedShoppingList[ingredient]) {\n          updatedShoppingList[ingredient] -= ownedQuantity;\n          if (updatedShoppingList[ingredient] <= 0) {\n            delete updatedShoppingList[ingredient];\n          }\n        }\n      }\n      this.setState({\n        shoppingList: updatedShoppingList\n      });\n    };\n    this.addNewRecipe = recipeName => {\n      const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n      if (ingredients) {\n        const recipeIngredients = ingredients.split(',').map(ingredient => ingredient.trim());\n        const {\n          recipes\n        } = this.state;\n        const updatedRecipes = {\n          ...recipes,\n          [recipeName]: recipeIngredients\n        };\n        this.setState({\n          recipes: updatedRecipes\n        }, () => {\n          this.updateShoppingList(recipeIngredients);\n        });\n      }\n    };\n    this.clearShoppingList = () => {\n      this.setState({\n        shoppingList: {}\n      });\n    };\n    this.parseQuantity = quantity => {\n      if (quantity.trim() === '') {\n        return 1; // Default to 1 if no quantity is provided\n      }\n\n      if (quantity.includes('/')) {\n        const [numerator, denominator] = quantity.split('/');\n        return parseFloat(numerator) / parseFloat(denominator);\n      }\n      return parseFloat(quantity);\n    };\n    this.removeOwnedIngredient = ingredient => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const updatedIngredients = {\n        ...ownedIngredients\n      };\n      delete updatedIngredients[ingredient];\n      this.setState({\n        ownedIngredients: updatedIngredients\n      });\n    };\n    this.handleAddRecipe = recipe => {\n      const {\n        shoppingList\n      } = this.state;\n      const updatedShoppingList = {\n        ...shoppingList\n      };\n      recipe.ingredients.forEach(ingredient => {\n        const {\n          name,\n          quantity\n        } = ingredient;\n        if (updatedShoppingList[name]) {\n          updatedShoppingList[name] += quantity;\n        } else {\n          updatedShoppingList[name] = quantity;\n        }\n      });\n      this.setState({\n        shoppingList: updatedShoppingList\n      });\n    };\n    this.handleOwnedIngredientChange = (event, ingredient) => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const quantity = event.target.value.trim() === '' ? '' : parseInt(event.target.value, 10);\n      const updatedOwnedIngredients = {\n        ...ownedIngredients,\n        [ingredient]: quantity\n      };\n      this.setState({\n        ownedIngredients: updatedOwnedIngredients\n      }, () => {\n        this.updateShoppingListFromOwned();\n      });\n    };\n    this.renderShoppingList = () => {\n      const {\n        shoppingList,\n        ownedIngredients\n      } = this.state;\n      return Object.keys(shoppingList).map((ingredientName, index) => {\n        var _ownedIngredients$ing;\n        const shoppingQuantity = shoppingList[ingredientName];\n        const ownedQuantity = ((_ownedIngredients$ing = ownedIngredients[ingredientName]) === null || _ownedIngredients$ing === void 0 ? void 0 : _ownedIngredients$ing.quantity) || 0;\n        const remainingQuantity = shoppingQuantity - ownedQuantity;\n        if (remainingQuantity <= 0) {\n          return null; // Skip rendering if the ingredient is fully owned\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [remainingQuantity, \" \", ingredientName]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }, this);\n      });\n    };\n    this.renderOwnedIngredients = () => {\n      const {\n        ownedIngredients\n      } = this.state;\n      return Object.keys(ownedIngredients).map((ingredientName, index) => {\n        const quantity = ownedIngredients[ingredientName].quantity;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: quantity,\n            onChange: event => this.handleOwnedIngredientChange(event, ingredientName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 11\n          }, this), ' ', ingredientName]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }, this);\n      });\n    };\n    const storedRecipes = localStorage.getItem('recipes');\n    const storedShoppingList = localStorage.getItem('shoppingList');\n    const storedOwnedIngredients = localStorage.getItem('ownedIngredients');\n    this.state = {\n      recipes: storedRecipes ? JSON.parse(storedRecipes) : {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper']\n      },\n      currentRecipe: '',\n      shoppingList: storedShoppingList ? JSON.parse(storedShoppingList) : {},\n      ownedIngredients: storedOwnedIngredients ? JSON.parse(storedOwnedIngredients) : {}\n    };\n  }\n  componentDidUpdate() {\n    localStorage.setItem('recipes', JSON.stringify(this.state.recipes));\n    localStorage.setItem('shoppingList', JSON.stringify(this.state.shoppingList));\n    localStorage.setItem('ownedIngredients', JSON.stringify(this.state.ownedIngredients));\n  }\n  render() {\n    const {\n      currentRecipe,\n      shoppingList,\n      recipes,\n      ownedIngredients\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recipe App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentRecipe,\n          onChange: this.handleRecipeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addRecipe,\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shopping-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shopping List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), Object.keys(shoppingList).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No items in the shopping list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(shoppingList).map((_ref, index) => {\n              let [ingredient, quantity] = _ref;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [quantity, \" \", ingredient]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.clearShoppingList,\n            children: \"Clear Shopping List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stored-recipes\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Stored Recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), Object.keys(recipes).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No recipes stored\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Object.keys(recipes).map((recipeName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-box\",\n              onClick: () => this.updateShoppingList(recipes[recipeName]),\n              children: recipeName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"owned-ingredients\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Owned Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), Object.entries(ownedIngredients).map((_ref2, index) => {\n            let [ingredient, quantity] = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"owned-ingredient\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: ingredient,\n                onChange: event => this.handleOwnedIngredientChange(event, ingredient)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: quantity,\n                onChange: event => this.handleOwnedIngredientChange(event, ingredient)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.removeOwnedIngredient(ingredient),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addOwnedIngredient,\n            children: \"Add Ingredient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RecipeApp;","map":{"version":3,"names":["React","FuzzyMatch","jsxDEV","_jsxDEV","RecipeApp","Component","constructor","props","findBestMatch","ingredientName","recipeIngredients","matcher","bestMatch","find","value","handleRecipeChange","event","setState","currentRecipe","target","addOwnedIngredient","ingredient","window","prompt","quantity","recipes","state","fuzzyMatcher","matchedIngredient","get","updatedOwnedIngredients","ownedIngredients","updateShoppingList","addRecipe","trim","confirmAddRecipe","confirm","addNewRecipe","ingredients","updatedShoppingList","shoppingList","forEach","spaceIndex","indexOf","slice","parsedQuantity","parseQuantity","remainingQuantity","updateShoppingListFromOwned","ownedQuantity","Object","entries","recipeName","split","map","updatedRecipes","clearShoppingList","includes","numerator","denominator","parseFloat","removeOwnedIngredient","updatedIngredients","handleAddRecipe","recipe","name","handleOwnedIngredientChange","parseInt","renderShoppingList","keys","index","_ownedIngredients$ing","shoppingQuantity","children","fileName","_jsxFileName","lineNumber","columnNumber","renderOwnedIngredients","type","onChange","storedRecipes","localStorage","getItem","storedShoppingList","storedOwnedIngredients","JSON","parse","Pancakes","Salad","componentDidUpdate","setItem","stringify","render","onClick","className","length","_ref","_ref2"],"sources":["/home/zhillyz/shoppingList/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport FuzzyMatch from 'fuzzy-match';\n\n\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const storedRecipes = localStorage.getItem('recipes');\n    const storedShoppingList = localStorage.getItem('shoppingList');\n    const storedOwnedIngredients = localStorage.getItem('ownedIngredients');\n\n    this.state = {\n      recipes: storedRecipes ? JSON.parse(storedRecipes) : {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper'],\n      },\n      currentRecipe: '',\n      shoppingList: storedShoppingList ? JSON.parse(storedShoppingList) : {},\n      ownedIngredients: storedOwnedIngredients ? JSON.parse(storedOwnedIngredients) : {},\n    };\n  }\n\n  findBestMatch = (ingredientName, recipeIngredients) => {\n    const matcher = new FuzzyMatch(recipeIngredients);\n    const bestMatch = matcher.find(ingredientName);\n    return bestMatch && bestMatch.value;\n  };\n  \n\n  componentDidUpdate() {\n    localStorage.setItem('recipes', JSON.stringify(this.state.recipes));\n    localStorage.setItem('shoppingList', JSON.stringify(this.state.shoppingList));\n    localStorage.setItem('ownedIngredients', JSON.stringify(this.state.ownedIngredients));\n  }\n\n  handleRecipeChange = (event) => {\n    this.setState({ currentRecipe: event.target.value });\n  };\n\n// Inside the addOwnedIngredient function\n  addOwnedIngredient = () => {\n    const ingredient = window.prompt('Enter the ingredient:');\n    const quantity = window.prompt('Enter the quantity:');\n\n    if (ingredient && quantity) {\n      const { currentRecipe, recipes } = this.state;\n      const recipeIngredients = recipes[currentRecipe] || [];\n\n      // Use FuzzyMatch to find the best fuzzy match for the entered ingredient\n      const fuzzyMatcher = new FuzzyMatch(recipeIngredients);\n      const matchedIngredient = fuzzyMatcher.get(ingredient);\n\n      const updatedOwnedIngredients = {\n        ...this.state.ownedIngredients,\n        [matchedIngredient]: quantity,\n      };\n\n      this.setState({ ownedIngredients: updatedOwnedIngredients }, () => {\n        this.updateShoppingList(recipeIngredients); // Call updateShoppingList with the original recipeIngredients array\n      });\n    }\n  };\n\n\n\n  \n\n  addRecipe = () => {\n    const { recipes, currentRecipe } = this.state;\n\n    if (currentRecipe.trim() === '') {\n      return;\n    }\n\n    const recipeIngredients = recipes[currentRecipe];\n    if (recipeIngredients) {\n      this.updateShoppingList(recipeIngredients);\n    } else {\n      const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n      if (confirmAddRecipe) {\n        this.addNewRecipe(currentRecipe);\n      }\n    }\n  };\n\n  updateShoppingList = (ingredients) => {\n    const { ownedIngredients } = this.state;\n    const updatedShoppingList = { ...this.state.shoppingList };\n  \n    ingredients.forEach((ingredient) => {\n      const spaceIndex = ingredient.indexOf(' ');\n      let quantity;\n      let ingredientName;\n  \n      if (spaceIndex === -1) {\n        quantity = '1';\n        ingredientName = ingredient;\n      } else {\n        quantity = ingredient.slice(0, spaceIndex);\n        ingredientName = ingredient.slice(spaceIndex + 1);\n      }\n  \n      const parsedQuantity = this.parseQuantity(quantity);\n      const remainingQuantity = parsedQuantity - (ownedIngredients[ingredientName] || 0);\n  \n      if (remainingQuantity > 0) {\n        updatedShoppingList[ingredientName] = (updatedShoppingList[ingredientName] || 0) + remainingQuantity;\n      }\n    });\n  \n    this.setState(\n      {\n        currentRecipe: '',\n        shoppingList: updatedShoppingList,\n      },\n      () => {\n        this.updateShoppingListFromOwned();\n      }\n    );\n  };\n  \n\n  updateShoppingListFromOwned = () => {\n    const { shoppingList, ownedIngredients } = this.state;\n  \n    const updatedShoppingList = { ...shoppingList };\n  \n    for (const [ingredient, ownedQuantity] of Object.entries(ownedIngredients)) {\n      if (ownedQuantity >= 0 && updatedShoppingList[ingredient]) {\n        updatedShoppingList[ingredient] -= ownedQuantity;\n        if (updatedShoppingList[ingredient] <= 0) {\n          delete updatedShoppingList[ingredient];\n        }\n      }\n    }    \n  \n    this.setState({ shoppingList: updatedShoppingList });\n  };\n  \n  \n  \n  \n  \n  \n\n  addNewRecipe = (recipeName) => {\n    const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n\n    if (ingredients) {\n      const recipeIngredients = ingredients.split(',').map((ingredient) => ingredient.trim());\n      const { recipes } = this.state;\n\n      const updatedRecipes = { ...recipes, [recipeName]: recipeIngredients };\n      this.setState({ recipes: updatedRecipes }, () => {\n        this.updateShoppingList(recipeIngredients);\n      });\n    }\n  };\n\n  clearShoppingList = () => {\n    this.setState({ shoppingList: {} });\n  };\n\n  parseQuantity = (quantity) => {\n    if (quantity.trim() === '') {\n      return 1; // Default to 1 if no quantity is provided\n    }\n\n    if (quantity.includes('/')) {\n      const [numerator, denominator] = quantity.split('/');\n      return parseFloat(numerator) / parseFloat(denominator);\n    }\n\n    return parseFloat(quantity);\n  };\n\n  removeOwnedIngredient = (ingredient) => {\n    const { ownedIngredients } = this.state;\n    const updatedIngredients = { ...ownedIngredients };\n  \n    delete updatedIngredients[ingredient];\n  \n    this.setState({ ownedIngredients: updatedIngredients });\n  };\n  \n  handleAddRecipe = (recipe) => {\n    const { shoppingList } = this.state;\n    const updatedShoppingList = { ...shoppingList };\n  \n    recipe.ingredients.forEach((ingredient) => {\n      const { name, quantity } = ingredient;\n  \n      if (updatedShoppingList[name]) {\n        updatedShoppingList[name] += quantity;\n      } else {\n        updatedShoppingList[name] = quantity;\n      }\n    });\n  \n    this.setState({ shoppingList: updatedShoppingList });\n  };\n  \n\n  handleOwnedIngredientChange = (event, ingredient) => {\n    const { ownedIngredients } = this.state;\n    const quantity = event.target.value.trim() === '' ? '' : parseInt(event.target.value, 10);\n  \n    const updatedOwnedIngredients = {\n      ...ownedIngredients,\n      [ingredient]: quantity,\n    };\n  \n    this.setState({ ownedIngredients: updatedOwnedIngredients }, () => {\n      this.updateShoppingListFromOwned();\n    });\n  };\n  \n  \n  \n\n  renderShoppingList = () => {\n    const { shoppingList, ownedIngredients } = this.state;\n\n    return Object.keys(shoppingList).map((ingredientName, index) => {\n      const shoppingQuantity = shoppingList[ingredientName];\n      const ownedQuantity = ownedIngredients[ingredientName]?.quantity || 0;\n      const remainingQuantity = shoppingQuantity - ownedQuantity;\n\n      if (remainingQuantity <= 0) {\n        return null; // Skip rendering if the ingredient is fully owned\n      }\n\n      return (\n        <div key={index}>\n          {remainingQuantity} {ingredientName}\n        </div>\n      );\n    });\n  };\n\n  renderOwnedIngredients = () => {\n    const { ownedIngredients } = this.state;\n\n    return Object.keys(ownedIngredients).map((ingredientName, index) => {\n      const quantity = ownedIngredients[ingredientName].quantity;\n\n      return (\n        <div key={index}>\n          <input\n            type=\"number\"\n            value={quantity}\n            onChange={(event) => this.handleOwnedIngredientChange(event, ingredientName)}\n          />{' '}\n          {ingredientName}\n        </div>\n      );\n    });\n  };\n\n  render() {\n    const { currentRecipe, shoppingList, recipes, ownedIngredients } = this.state;\n  \n    return (\n      <div>\n        <h1>Recipe App</h1>\n        <div>\n          <input type=\"text\" value={currentRecipe} onChange={this.handleRecipeChange} />\n          <button onClick={this.addRecipe}>Add Recipe</button>\n        </div>\n        <div className=\"shopping-list\">\n          <h2>Shopping List</h2>\n          {Object.keys(shoppingList).length === 0 ? (\n            <p>No items in the shopping list</p>\n          ) : (\n            <div>\n              <ul>\n                {Object.entries(shoppingList).map(([ingredient, quantity], index) => (\n                  <li key={index}>\n                    {quantity} {ingredient}\n                  </li>\n                ))}\n              </ul>\n              <button onClick={this.clearShoppingList}>Clear Shopping List</button>\n            </div>\n          )}\n        </div>\n        <div className=\"recipe-container\">\n          <div className=\"stored-recipes\">\n            <h2>Stored Recipes</h2>\n            {Object.keys(recipes).length === 0 ? (\n              <p>No recipes stored</p>\n            ) : (\n              <div>\n                {Object.keys(recipes).map((recipeName, index) => (\n                  <div\n                    key={index}\n                    className=\"recipe-box\"\n                    onClick={() => this.updateShoppingList(recipes[recipeName])}\n                  >\n                    {recipeName}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          <div className=\"owned-ingredients\">\n            <h2>Owned Ingredients</h2>\n              {Object.entries(ownedIngredients).map(([ingredient, quantity], index) => (\n              <div key={index} className=\"owned-ingredient\">\n                <input\n                  type=\"text\"\n                  value={ingredient}\n                  onChange={(event) => this.handleOwnedIngredientChange(event, ingredient)}\n                />\n                <input\n                  type=\"number\"\n                  value={quantity}\n                  onChange={(event) => this.handleOwnedIngredientChange(event, ingredient)}\n                />\n                <button onClick={() => this.removeOwnedIngredient(ingredient)}>Remove</button>\n              </div>\n            ))}\n            <button onClick={this.addOwnedIngredient}>Add Ingredient</button>\n          </div>\n        </div>\n      </div>\n    );\n  }  \n  \n}\n\nexport default RecipeApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}