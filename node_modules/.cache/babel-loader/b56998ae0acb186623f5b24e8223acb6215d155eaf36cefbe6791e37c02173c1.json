{"ast":null,"code":"var _jsxFileName = \"/home/zhillyz/shoppingList/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleRecipeChange = event => {\n      this.setState({\n        currentRecipe: event.target.value\n      });\n    };\n    this.addOwnedIngredient = () => {\n      const ingredient = window.prompt('Enter the ingredient:');\n      const quantity = window.prompt('Enter the quantity:');\n      if (ingredient && quantity) {\n        const {\n          shoppingList,\n          ownedIngredients\n        } = this.state;\n        const updatedShoppingList = {\n          ...shoppingList\n        };\n        const updatedOwnedIngredients = {\n          ...ownedIngredients\n        };\n        if (updatedShoppingList[ingredient]) {\n          const removedQuantity = Math.min(updatedShoppingList[ingredient], parseInt(quantity, 10));\n          updatedShoppingList[ingredient] -= removedQuantity;\n          if (updatedOwnedIngredients[ingredient]) {\n            updatedOwnedIngredients[ingredient].used += removedQuantity;\n            updatedOwnedIngredients[ingredient].remaining -= removedQuantity;\n          } else {\n            updatedOwnedIngredients[ingredient] = {\n              used: removedQuantity,\n              remaining: removedQuantity\n            };\n          }\n          if (updatedShoppingList[ingredient] === 0) {\n            delete updatedShoppingList[ingredient];\n          }\n        } else {\n          if (updatedOwnedIngredients[ingredient]) {\n            updatedOwnedIngredients[ingredient].remaining += parseInt(quantity, 10);\n          } else {\n            updatedOwnedIngredients[ingredient] = {\n              used: 0,\n              remaining: parseInt(quantity, 10)\n            };\n          }\n        }\n        this.setState({\n          shoppingList: updatedShoppingList,\n          ownedIngredients: updatedOwnedIngredients\n        }, () => {\n          this.updateShoppingListFromOwned();\n        });\n      }\n    };\n    this.handleStoredRecipeClick = recipeName => {\n      const {\n        recipes\n      } = this.state;\n      const recipeIngredients = recipes[recipeName];\n      if (recipeIngredients) {\n        this.updateShoppingList(recipeIngredients);\n      }\n    };\n    this.deleteRecipe = recipeName => {\n      const {\n        recipes\n      } = this.state;\n      const updatedRecipes = {\n        ...recipes\n      };\n      delete updatedRecipes[recipeName];\n      this.setState({\n        recipes: updatedRecipes\n      });\n    };\n    this.addRecipe = () => {\n      const {\n        recipes,\n        currentRecipe\n      } = this.state;\n      if (currentRecipe.trim() === '') {\n        return;\n      }\n      const recipeIngredients = recipes[currentRecipe];\n      if (recipeIngredients) {\n        this.updateShoppingList(recipeIngredients);\n      } else {\n        const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n        if (confirmAddRecipe) {\n          this.addNewRecipe(currentRecipe);\n        }\n      }\n    };\n    this.updateShoppingList = ingredients => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const updatedShoppingList = {\n        ...this.state.shoppingList\n      };\n      const updatedOwnedIngredients = {\n        ...ownedIngredients\n      };\n      ingredients.forEach(ingredient => {\n        const spaceIndex = ingredient.indexOf(' ');\n        let quantity;\n        let ingredientName;\n        if (spaceIndex === -1) {\n          quantity = '1';\n          ingredientName = ingredient;\n        } else {\n          quantity = ingredient.slice(0, spaceIndex);\n          ingredientName = ingredient.slice(spaceIndex + 1);\n        }\n        const parsedQuantity = this.parseQuantity(quantity);\n        const ownedQuantity = ownedIngredients[ingredientName] || 0;\n        const remainingQuantity = parsedQuantity - ownedQuantity;\n        if (remainingQuantity > 0) {\n          updatedShoppingList[ingredientName] = (updatedShoppingList[ingredientName] || 0) + remainingQuantity;\n        }\n\n        // Update owned ingredient quantities\n        if (ownedQuantity > 0) {\n          updatedOwnedIngredients[ingredientName] = Math.max(0, ownedQuantity - parsedQuantity);\n        }\n      });\n      this.setState({\n        currentRecipe: '',\n        shoppingList: updatedShoppingList,\n        ownedIngredients: updatedOwnedIngredients\n      }, () => {\n        this.updateShoppingListFromOwned();\n      });\n    };\n    this.updateShoppingListFromOwned = () => {\n      const {\n        shoppingList,\n        ownedIngredients\n      } = this.state;\n      const updatedShoppingList = {\n        ...shoppingList\n      };\n      const updatedOwnedIngredients = {\n        ...ownedIngredients\n      };\n      for (const [ingredient, quantity] of Object.entries(ownedIngredients)) {\n        const {\n          used\n        } = quantity;\n        const shoppingQuantity = shoppingList[ingredient];\n        if (shoppingQuantity) {\n          const remainingQuantity = Math.max(shoppingQuantity - used, 0);\n          updatedOwnedIngredients[ingredient] = {\n            used,\n            remaining: remainingQuantity\n          };\n          if (remainingQuantity <= 0) {\n            delete updatedShoppingList[ingredient];\n          }\n        } else {\n          updatedOwnedIngredients[ingredient] = {\n            used,\n            remaining: 0\n          };\n        }\n      }\n      this.setState({\n        shoppingList: updatedShoppingList,\n        ownedIngredients: updatedOwnedIngredients\n      });\n    };\n    this.addNewRecipe = recipeName => {\n      const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n      if (ingredients) {\n        const recipeIngredients = ingredients.split(',').map(ingredient => ingredient.trim());\n        const {\n          recipes\n        } = this.state;\n        const updatedRecipes = {\n          ...recipes,\n          [recipeName]: recipeIngredients\n        };\n        this.setState({\n          recipes: updatedRecipes\n        }, () => {\n          this.updateShoppingList(recipeIngredients);\n        });\n      }\n    };\n    this.clearShoppingList = () => {\n      this.setState({\n        shoppingList: {}\n      });\n    };\n    this.parseQuantity = quantity => {\n      if (quantity.trim() === '') {\n        return 1; // Default to 1 if no quantity is provided\n      }\n\n      if (quantity.includes('/')) {\n        const [numerator, denominator] = quantity.split('/');\n        return parseFloat(numerator) / parseFloat(denominator);\n      }\n      return parseFloat(quantity);\n    };\n    this.removeOwnedIngredient = ingredient => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const updatedIngredients = {\n        ...ownedIngredients\n      };\n      delete updatedIngredients[ingredient];\n      this.setState({\n        ownedIngredients: updatedIngredients\n      });\n    };\n    this.renderOwnedIngredients = () => {\n      const {\n        ownedIngredients\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(ownedIngredients).map((_ref, index) => {\n          let [ingredient, quantity] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"owned-ingredient\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient\",\n              children: ingredient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: quantity.used,\n              onChange: event => this.handleOwnedIngredientUsedChange(event, ingredient),\n              className: quantity.used > 0 ? 'red' : 'green'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: quantity.remaining,\n              onChange: event => this.handleOwnedIngredientRemainingChange(event, ingredient),\n              className: quantity.used > 0 ? 'red' : 'green'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.removeOwnedIngredient(ingredient),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }, this);\n    };\n    this.handleAddRecipe = recipe => {\n      const {\n        shoppingList\n      } = this.state;\n      const updatedShoppingList = {\n        ...shoppingList\n      };\n      recipe.ingredients.forEach(ingredient => {\n        const {\n          name,\n          quantity\n        } = ingredient;\n        if (updatedShoppingList[name]) {\n          updatedShoppingList[name] += quantity;\n        } else {\n          updatedShoppingList[name] = quantity;\n        }\n      });\n      this.setState({\n        shoppingList: updatedShoppingList\n      });\n    };\n    this.handleOwnedIngredientUsedChange = (event, ingredient) => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const used = event.target.value.trim() === '' ? 0 : parseInt(event.target.value, 10);\n      const updatedOwnedIngredients = {\n        ...ownedIngredients,\n        [ingredient]: {\n          ...ownedIngredients[ingredient],\n          used\n        }\n      };\n      this.setState({\n        ownedIngredients: updatedOwnedIngredients\n      });\n    };\n    this.handleOwnedIngredientChange = (event, ingredient) => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const quantity = event.target.value.trim() === '' ? '' : parseInt(event.target.value, 10);\n      const updatedOwnedIngredients = {\n        ...ownedIngredients,\n        [ingredient]: {\n          ...ownedIngredients[ingredient],\n          remaining: quantity // Update the `remaining` property instead of the whole ingredient value\n        }\n      };\n\n      this.setState({\n        ownedIngredients: updatedOwnedIngredients\n      }, () => {\n        this.updateShoppingListFromOwned();\n      });\n    };\n    this.handleOwnedIngredientRemainingChange = (event, ingredient) => {\n      const {\n        ownedIngredients\n      } = this.state;\n      const remaining = event.target.value.trim() === '' ? 0 : parseInt(event.target.value, 10);\n      const updatedOwnedIngredients = {\n        ...ownedIngredients,\n        [ingredient]: {\n          ...ownedIngredients[ingredient],\n          remaining\n        }\n      };\n      this.setState({\n        ownedIngredients: updatedOwnedIngredients\n      });\n    };\n    this.renderShoppingList = () => {\n      const {\n        shoppingList,\n        ownedIngredients\n      } = this.state;\n      return Object.keys(shoppingList).map((ingredientName, index) => {\n        var _ownedIngredients$ing;\n        const shoppingQuantity = shoppingList[ingredientName];\n        const ownedQuantity = ((_ownedIngredients$ing = ownedIngredients[ingredientName]) === null || _ownedIngredients$ing === void 0 ? void 0 : _ownedIngredients$ing.quantity) || 0;\n        const remainingQuantity = shoppingQuantity - ownedQuantity;\n        if (remainingQuantity <= 0) {\n          return null; // Skip rendering if the ingredient is fully owned\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [remainingQuantity, \" \", ingredientName]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 9\n        }, this);\n      });\n    };\n    const storedRecipes = localStorage.getItem('recipes');\n    const storedShoppingList = localStorage.getItem('shoppingList');\n    const storedOwnedIngredients = localStorage.getItem('ownedIngredients');\n    this.state = {\n      recipes: storedRecipes ? JSON.parse(storedRecipes) : {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper']\n      },\n      currentRecipe: '',\n      shoppingList: storedShoppingList ? JSON.parse(storedShoppingList) : {},\n      ownedIngredients: storedOwnedIngredients ? JSON.parse(storedOwnedIngredients) : {}\n    };\n  }\n  componentDidUpdate() {\n    localStorage.setItem('recipes', JSON.stringify(this.state.recipes));\n    localStorage.setItem('shoppingList', JSON.stringify(this.state.shoppingList));\n    localStorage.setItem('ownedIngredients', JSON.stringify(this.state.ownedIngredients));\n  }\n  render() {\n    const {\n      currentRecipe,\n      shoppingList,\n      recipes,\n      ownedIngredients\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recipe App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-receipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentRecipe,\n          onChange: this.handleRecipeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addRecipe,\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shopping-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shopping List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), Object.keys(shoppingList).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No items in the shopping list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(shoppingList).map((_ref2, index) => {\n              let [ingredient, quantity] = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [quantity, \" \", ingredient]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.clearShoppingList,\n            children: \"Clear Shopping List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stored-recipes\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Stored Recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), Object.keys(recipes).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No recipes stored\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Object.keys(recipes).map((recipeName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-name\",\n                children: recipeName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"add-button\",\n                onClick: () => this.handleStoredRecipeClick(recipeName),\n                children: \"Add to Shopping List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => this.deleteRecipe(recipeName),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"owned-ingredients\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Owned Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"owned-ingredient\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient-heading\",\n              children: \"Ingredient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quantity-heading\",\n              children: \"Used\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quantity-heading\",\n              children: \"Remaining\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"action-heading\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this), this.renderOwnedIngredients(), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addOwnedIngredient,\n            children: \"Add Ingredient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RecipeApp;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RecipeApp","Component","constructor","props","handleRecipeChange","event","setState","currentRecipe","target","value","addOwnedIngredient","ingredient","window","prompt","quantity","shoppingList","ownedIngredients","state","updatedShoppingList","updatedOwnedIngredients","removedQuantity","Math","min","parseInt","used","remaining","updateShoppingListFromOwned","handleStoredRecipeClick","recipeName","recipes","recipeIngredients","updateShoppingList","deleteRecipe","updatedRecipes","addRecipe","trim","confirmAddRecipe","confirm","addNewRecipe","ingredients","forEach","spaceIndex","indexOf","ingredientName","slice","parsedQuantity","parseQuantity","ownedQuantity","remainingQuantity","max","Object","entries","shoppingQuantity","split","map","clearShoppingList","includes","numerator","denominator","parseFloat","removeOwnedIngredient","updatedIngredients","renderOwnedIngredients","children","_ref","index","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","handleOwnedIngredientUsedChange","handleOwnedIngredientRemainingChange","onClick","handleAddRecipe","recipe","name","handleOwnedIngredientChange","renderShoppingList","keys","_ownedIngredients$ing","storedRecipes","localStorage","getItem","storedShoppingList","storedOwnedIngredients","JSON","parse","Pancakes","Salad","componentDidUpdate","setItem","stringify","render","length","_ref2"],"sources":["/home/zhillyz/shoppingList/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const storedRecipes = localStorage.getItem('recipes');\n    const storedShoppingList = localStorage.getItem('shoppingList');\n    const storedOwnedIngredients = localStorage.getItem('ownedIngredients');\n\n    this.state = {\n      recipes: storedRecipes ? JSON.parse(storedRecipes) : {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper'],\n      },\n      currentRecipe: '',\n      shoppingList: storedShoppingList ? JSON.parse(storedShoppingList) : {},\n      ownedIngredients: storedOwnedIngredients ? JSON.parse(storedOwnedIngredients) : {},\n    };\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('recipes', JSON.stringify(this.state.recipes));\n    localStorage.setItem('shoppingList', JSON.stringify(this.state.shoppingList));\n    localStorage.setItem('ownedIngredients', JSON.stringify(this.state.ownedIngredients));\n  }\n\n  handleRecipeChange = (event) => {\n    this.setState({ currentRecipe: event.target.value });\n  };\n\n  addOwnedIngredient = () => {\n    const ingredient = window.prompt('Enter the ingredient:');\n    const quantity = window.prompt('Enter the quantity:');\n  \n    if (ingredient && quantity) {\n      const { shoppingList, ownedIngredients } = this.state;\n      const updatedShoppingList = { ...shoppingList };\n      const updatedOwnedIngredients = { ...ownedIngredients };\n  \n      if (updatedShoppingList[ingredient]) {\n        const removedQuantity = Math.min(updatedShoppingList[ingredient], parseInt(quantity, 10));\n        updatedShoppingList[ingredient] -= removedQuantity;\n  \n        if (updatedOwnedIngredients[ingredient]) {\n          updatedOwnedIngredients[ingredient].used += removedQuantity;\n          updatedOwnedIngredients[ingredient].remaining -= removedQuantity;\n        } else {\n          updatedOwnedIngredients[ingredient] = {\n            used: removedQuantity,\n            remaining: removedQuantity,\n          };\n        }\n  \n        if (updatedShoppingList[ingredient] === 0) {\n          delete updatedShoppingList[ingredient];\n        }\n      } else {\n        if (updatedOwnedIngredients[ingredient]) {\n          updatedOwnedIngredients[ingredient].remaining += parseInt(quantity, 10);\n        } else {\n          updatedOwnedIngredients[ingredient] = {\n            used: 0,\n            remaining: parseInt(quantity, 10),\n          };\n        }\n      }\n  \n      this.setState(\n        {\n          shoppingList: updatedShoppingList,\n          ownedIngredients: updatedOwnedIngredients,\n        },\n        () => {\n          this.updateShoppingListFromOwned();\n        }\n      );\n    }\n  };\n\n  handleStoredRecipeClick = (recipeName) => {\n    const { recipes } = this.state;\n    const recipeIngredients = recipes[recipeName];\n    if (recipeIngredients) {\n      this.updateShoppingList(recipeIngredients);\n    }\n  };\n  \n  deleteRecipe = (recipeName) => {\n    const { recipes } = this.state;\n    const updatedRecipes = { ...recipes };\n    delete updatedRecipes[recipeName];\n    this.setState({ recipes: updatedRecipes });\n  };\n\n  addRecipe = () => {\n    const { recipes, currentRecipe } = this.state;\n\n    if (currentRecipe.trim() === '') {\n      return;\n    }\n\n    const recipeIngredients = recipes[currentRecipe];\n    if (recipeIngredients) {\n      this.updateShoppingList(recipeIngredients);\n    } else {\n      const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n      if (confirmAddRecipe) {\n        this.addNewRecipe(currentRecipe);\n      }\n    }\n  };\n\n  updateShoppingList = (ingredients) => {\n    const { ownedIngredients } = this.state;\n    const updatedShoppingList = { ...this.state.shoppingList };\n    const updatedOwnedIngredients = { ...ownedIngredients };\n  \n    ingredients.forEach((ingredient) => {\n      const spaceIndex = ingredient.indexOf(' ');\n      let quantity;\n      let ingredientName;\n  \n      if (spaceIndex === -1) {\n        quantity = '1';\n        ingredientName = ingredient;\n      } else {\n        quantity = ingredient.slice(0, spaceIndex);\n        ingredientName = ingredient.slice(spaceIndex + 1);\n      }\n  \n      const parsedQuantity = this.parseQuantity(quantity);\n      const ownedQuantity = ownedIngredients[ingredientName] || 0;\n      const remainingQuantity = parsedQuantity - ownedQuantity;\n  \n      if (remainingQuantity > 0) {\n        updatedShoppingList[ingredientName] = (updatedShoppingList[ingredientName] || 0) + remainingQuantity;\n      }\n  \n      // Update owned ingredient quantities\n      if (ownedQuantity > 0) {\n        updatedOwnedIngredients[ingredientName] = Math.max(0, ownedQuantity - parsedQuantity);\n      }\n    });\n  \n    this.setState(\n      {\n        currentRecipe: '',\n        shoppingList: updatedShoppingList,\n        ownedIngredients: updatedOwnedIngredients,\n      },\n      () => {\n        this.updateShoppingListFromOwned();\n      }\n    );\n  };\n  \n  \n  \n\n  updateShoppingListFromOwned = () => {\n    const { shoppingList, ownedIngredients } = this.state;\n    const updatedShoppingList = { ...shoppingList };\n    const updatedOwnedIngredients = { ...ownedIngredients };\n  \n    for (const [ingredient, quantity] of Object.entries(ownedIngredients)) {\n      const { used } = quantity;\n      const shoppingQuantity = shoppingList[ingredient];\n  \n      if (shoppingQuantity) {\n        const remainingQuantity = Math.max(shoppingQuantity - used, 0);\n        updatedOwnedIngredients[ingredient] = {\n          used,\n          remaining: remainingQuantity,\n        };\n  \n        if (remainingQuantity <= 0) {\n          delete updatedShoppingList[ingredient];\n        }\n      } else {\n        updatedOwnedIngredients[ingredient] = {\n          used,\n          remaining: 0,\n        };\n      }\n    }\n  \n    this.setState({\n      shoppingList: updatedShoppingList,\n      ownedIngredients: updatedOwnedIngredients,\n    });\n  };\n  \n    \n\n  addNewRecipe = (recipeName) => {\n    const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n\n    if (ingredients) {\n      const recipeIngredients = ingredients.split(',').map((ingredient) => ingredient.trim());\n      const { recipes } = this.state;\n\n      const updatedRecipes = { ...recipes, [recipeName]: recipeIngredients };\n      this.setState({ recipes: updatedRecipes }, () => {\n        this.updateShoppingList(recipeIngredients);\n      });\n    }\n  };\n\n  clearShoppingList = () => {\n    this.setState({ shoppingList: {} });\n  };\n\n  parseQuantity = (quantity) => {\n    if (quantity.trim() === '') {\n      return 1; // Default to 1 if no quantity is provided\n    }\n\n    if (quantity.includes('/')) {\n      const [numerator, denominator] = quantity.split('/');\n      return parseFloat(numerator) / parseFloat(denominator);\n    }\n\n    return parseFloat(quantity);\n  };\n\n  removeOwnedIngredient = (ingredient) => {\n    const { ownedIngredients } = this.state;\n    const updatedIngredients = { ...ownedIngredients };\n  \n    delete updatedIngredients[ingredient];\n  \n    this.setState({ ownedIngredients: updatedIngredients });\n  };\n\n  renderOwnedIngredients = () => {\n    const { ownedIngredients } = this.state;\n  \n    return (\n      <div>\n        {Object.entries(ownedIngredients).map(([ingredient, quantity], index) => {\n          return (\n            <div key={index} className=\"owned-ingredient\">\n              <div className=\"ingredient\">{ingredient}</div>\n              <input\n                type=\"number\"\n                value={quantity.used}\n                onChange={(event) => this.handleOwnedIngredientUsedChange(event, ingredient)}\n                className={quantity.used > 0 ? 'red' : 'green'}\n              />\n              <input\n                type=\"number\"\n                value={quantity.remaining}\n                onChange={(event) => this.handleOwnedIngredientRemainingChange(event, ingredient)}\n                className={quantity.used > 0 ? 'red' : 'green'}\n              />\n              <button onClick={() => this.removeOwnedIngredient(ingredient)}>Remove</button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n \n  \n  handleAddRecipe = (recipe) => {\n    const { shoppingList } = this.state;\n    const updatedShoppingList = { ...shoppingList };\n  \n    recipe.ingredients.forEach((ingredient) => {\n      const { name, quantity } = ingredient;\n  \n      if (updatedShoppingList[name]) {\n        updatedShoppingList[name] += quantity;\n      } else {\n        updatedShoppingList[name] = quantity;\n      }\n    });\n  \n    this.setState({ shoppingList: updatedShoppingList });\n  };\n  \n\n  handleOwnedIngredientUsedChange = (event, ingredient) => {\n    const { ownedIngredients } = this.state;\n    const used = event.target.value.trim() === '' ? 0 : parseInt(event.target.value, 10);\n    const updatedOwnedIngredients = {\n      ...ownedIngredients,\n      [ingredient]: {\n        ...ownedIngredients[ingredient],\n        used,\n      },\n    };\n  \n    this.setState({ ownedIngredients: updatedOwnedIngredients });\n  };\n\n  handleOwnedIngredientChange = (event, ingredient) => {\n    const { ownedIngredients } = this.state;\n    const quantity = event.target.value.trim() === '' ? '' : parseInt(event.target.value, 10);\n  \n    const updatedOwnedIngredients = {\n      ...ownedIngredients,\n      [ingredient]: {\n        ...ownedIngredients[ingredient],\n        remaining: quantity, // Update the `remaining` property instead of the whole ingredient value\n      },\n    };\n  \n    this.setState({ ownedIngredients: updatedOwnedIngredients }, () => {\n      this.updateShoppingListFromOwned();\n    });\n  };\n  \n\n  handleOwnedIngredientRemainingChange = (event, ingredient) => {\n    const { ownedIngredients } = this.state;\n    const remaining = event.target.value.trim() === '' ? 0 : parseInt(event.target.value, 10);\n    const updatedOwnedIngredients = {\n      ...ownedIngredients,\n      [ingredient]: {\n        ...ownedIngredients[ingredient],\n        remaining,\n      },\n    };\n  \n    this.setState({ ownedIngredients: updatedOwnedIngredients });\n  };\n  \n\n  renderShoppingList = () => {\n    const { shoppingList, ownedIngredients } = this.state;\n\n    return Object.keys(shoppingList).map((ingredientName, index) => {\n      const shoppingQuantity = shoppingList[ingredientName];\n      const ownedQuantity = ownedIngredients[ingredientName]?.quantity || 0;\n      const remainingQuantity = shoppingQuantity - ownedQuantity;\n\n      if (remainingQuantity <= 0) {\n        return null; // Skip rendering if the ingredient is fully owned\n      }\n\n      return (\n        <div key={index}>\n          {remainingQuantity} {ingredientName}\n        </div>\n      );\n    });\n  };\n\n  render() {\n    const { currentRecipe, shoppingList, recipes, ownedIngredients } = this.state;\n  \n    return (\n      <div className=\"center-container\">\n        <h1>Recipe App</h1>\n        <div className=\"add-receipe-container\">\n          <input type=\"text\" value={currentRecipe} onChange={this.handleRecipeChange} />\n          <button onClick={this.addRecipe}>Add Recipe</button>\n        </div>\n        <div className=\"shopping-list\">\n          <h2>Shopping List</h2>\n          {Object.keys(shoppingList).length === 0 ? (\n            <p>No items in the shopping list</p>\n          ) : (\n            <div>\n              <ul>\n                {Object.entries(shoppingList).map(([ingredient, quantity], index) => (\n                  <li key={index}>\n                    {quantity} {ingredient}\n                  </li>\n                ))}\n              </ul>\n              <button onClick={this.clearShoppingList}>Clear Shopping List</button>\n            </div>\n          )}\n        </div>\n        <div className=\"recipe-container\">\n          <div className=\"stored-recipes\">\n            <h2>Stored Recipes</h2>\n            {Object.keys(recipes).length === 0 ? (\n              <p>No recipes stored</p>\n            ) : (\n              <div>\n                {Object.keys(recipes).map((recipeName, index) => (\n                  <div key={index} className=\"recipe-box\">\n                    <span className=\"recipe-name\">{recipeName}</span>\n                    <button className=\"add-button\" onClick={() => this.handleStoredRecipeClick(recipeName)}>\n                      Add to Shopping List\n                    </button>\n                    <button className=\"delete-button\" onClick={() => this.deleteRecipe(recipeName)}>\n                      &times;\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          <div className=\"owned-ingredients\">\n            <h2>Owned Ingredients</h2>\n              <div className=\"owned-ingredient\">\n                <div className=\"ingredient-heading\">Ingredient</div>\n                <div className=\"quantity-heading\">Used</div>\n                <div className=\"quantity-heading\">Remaining</div>\n                <div className=\"action-heading\">Action</div>\n              </div>\n            {this.renderOwnedIngredients()} {/* Render owned ingredients using the method */}\n            <button onClick={this.addOwnedIngredient}>Add Ingredient</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  \n}\n\nexport default RecipeApp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}