{"ast":null,"code":"var _jsxFileName = \"/home/zhillyz/shoppingList/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateShoppingListFromOwnedIngredients = () => {\n      const {\n        recipes,\n        ownedIngredients\n      } = this.state;\n      const updatedShoppingList = {};\n      Object.values(recipes).forEach(recipeIngredients => {\n        recipeIngredients.forEach(ingredient => {\n          const spaceIndex = ingredient.indexOf(' ');\n          let quantity;\n          let ingredientName;\n          if (spaceIndex === -1) {\n            quantity = '1';\n            ingredientName = ingredient;\n          } else {\n            quantity = ingredient.slice(0, spaceIndex);\n            ingredientName = ingredient.slice(spaceIndex + 1);\n          }\n          const parsedQuantity = this.parseQuantity(quantity);\n          if (!ownedIngredients[ingredientName]) {\n            if (updatedShoppingList[ingredientName]) {\n              updatedShoppingList[ingredientName] += parsedQuantity;\n            } else {\n              updatedShoppingList[ingredientName] = parsedQuantity;\n            }\n          }\n        });\n      });\n      this.setState({\n        shoppingList: updatedShoppingList\n      });\n    };\n    this.handleRecipeChange = event => {\n      this.setState({\n        currentRecipe: event.target.value\n      });\n    };\n    this.addRecipe = () => {\n      const {\n        recipes,\n        currentRecipe\n      } = this.state;\n      if (currentRecipe.trim() === '') {\n        return;\n      }\n      const recipeIngredients = recipes[currentRecipe];\n      if (recipeIngredients) {\n        this.updateShoppingList(recipeIngredients);\n      } else {\n        const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n        if (confirmAddRecipe) {\n          this.addNewRecipe(currentRecipe);\n        }\n      }\n    };\n    this.updateShoppingList = ingredients => {\n      const {\n        shoppingList,\n        ownedIngredients\n      } = this.state;\n      const updatedShoppingList = {\n        ...shoppingList\n      };\n      ingredients.forEach(ingredient => {\n        const spaceIndex = ingredient.indexOf(' ');\n        let quantity;\n        let ingredientName;\n        if (spaceIndex === -1) {\n          quantity = '1';\n          ingredientName = ingredient;\n        } else {\n          quantity = ingredient.slice(0, spaceIndex);\n          ingredientName = ingredient.slice(spaceIndex + 1);\n        }\n        const parsedQuantity = this.parseQuantity(quantity);\n        if (ownedIngredients[ingredientName]) {\n          const remainingQuantity = ownedIngredients[ingredientName] - parsedQuantity;\n          if (remainingQuantity <= 0) {\n            delete ownedIngredients[ingredientName];\n          } else {\n            ownedIngredients[ingredientName] = remainingQuantity;\n          }\n        } else {\n          if (updatedShoppingList[ingredientName]) {\n            updatedShoppingList[ingredientName] += parsedQuantity;\n          } else {\n            updatedShoppingList[ingredientName] = parsedQuantity;\n          }\n        }\n      });\n      this.setState({\n        currentRecipe: '',\n        shoppingList: updatedShoppingList,\n        ownedIngredients: {\n          ...ownedIngredients\n        }\n      }, () => {\n        this.updateLocalStorage();\n      });\n    };\n    this.addNewRecipe = recipeName => {\n      const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n      if (ingredients) {\n        const recipeIngredients = ingredients.split(',').map(ingredient => ingredient.trim());\n        const {\n          recipes\n        } = this.state;\n        const updatedRecipes = {\n          ...recipes,\n          [recipeName]: recipeIngredients\n        };\n        this.setState({\n          recipes: updatedRecipes\n        }, () => {\n          this.updateShoppingList(recipeIngredients);\n        });\n      }\n    };\n    this.clearShoppingList = () => {\n      this.setState({\n        shoppingList: {}\n      }, () => {\n        this.updateLocalStorage();\n      });\n    };\n    this.parseQuantity = quantity => {\n      if (quantity.trim() === '') {\n        return 1; // Default to 1 if no quantity is provided\n      }\n\n      if (quantity.includes('/')) {\n        const [numerator, denominator] = quantity.split('/');\n        return parseFloat(numerator) / parseFloat(denominator);\n      }\n      return parseFloat(quantity);\n    };\n    this.handleOwnedIngredientChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      const {\n        ownedIngredients\n      } = this.state;\n      const parsedQuantity = parseFloat(value);\n      if (isNaN(parsedQuantity)) {\n        delete ownedIngredients[name];\n      } else {\n        ownedIngredients[name] = parsedQuantity;\n      }\n      this.setState({\n        ownedIngredients: {\n          ...ownedIngredients\n        }\n      }, () => {\n        this.updateShoppingListFromOwnedIngredients();\n        this.updateLocalStorage();\n      });\n    };\n    this.updateLocalStorage = () => {\n      const {\n        recipes,\n        shoppingList,\n        ownedIngredients\n      } = this.state;\n      localStorage.setItem('recipes', JSON.stringify(recipes));\n      localStorage.setItem('shoppingList', JSON.stringify(shoppingList));\n      localStorage.setItem('ownedIngredients', JSON.stringify(ownedIngredients));\n    };\n    const storedRecipes = localStorage.getItem('recipes');\n    const storedShoppingList = localStorage.getItem('shoppingList');\n    const storedOwnedIngredients = localStorage.getItem('ownedIngredients');\n\n    // Clear the stored shopping list and owned ingredients\n    localStorage.removeItem('shoppingList');\n    localStorage.removeItem('ownedIngredients');\n    this.state = {\n      recipes: storedRecipes ? JSON.parse(storedRecipes) : {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper']\n      },\n      currentRecipe: '',\n      shoppingList: {},\n      ownedIngredients: storedOwnedIngredients ? JSON.parse(storedOwnedIngredients) : {}\n    };\n  }\n  componentDidMount() {\n    this.updateShoppingListFromOwnedIngredients();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.ownedIngredients !== this.state.ownedIngredients) {\n      this.updateShoppingListFromOwnedIngredients();\n    }\n  }\n  render() {\n    const {\n      currentRecipe,\n      shoppingList,\n      recipes,\n      ownedIngredients\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recipe App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentRecipe,\n          onChange: this.handleRecipeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addRecipe,\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shopping List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), Object.keys(shoppingList).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No items in the shopping list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(shoppingList).map((_ref, index) => {\n              let [ingredient, quantity] = _ref;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [quantity, \" \", ingredient]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.clearShoppingList,\n            children: \"Clear Shopping List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Owned Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), Object.keys(ownedIngredients).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No owned ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(ownedIngredients).map((_ref2, index) => {\n              let [ingredient, quantity] = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: quantity,\n                  name: ingredient,\n                  onChange: this.handleOwnedIngredientChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this), ingredient]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stored-recipes\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Stored Recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), Object.keys(recipes).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No recipes stored\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Object.keys(recipes).map((recipeName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-box\",\n              onClick: () => this.updateShoppingList(recipes[recipeName]),\n              children: recipeName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RecipeApp;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RecipeApp","Component","constructor","props","updateShoppingListFromOwnedIngredients","recipes","ownedIngredients","state","updatedShoppingList","Object","values","forEach","recipeIngredients","ingredient","spaceIndex","indexOf","quantity","ingredientName","slice","parsedQuantity","parseQuantity","setState","shoppingList","handleRecipeChange","event","currentRecipe","target","value","addRecipe","trim","updateShoppingList","confirmAddRecipe","window","confirm","addNewRecipe","ingredients","remainingQuantity","updateLocalStorage","recipeName","prompt","split","map","updatedRecipes","clearShoppingList","includes","numerator","denominator","parseFloat","handleOwnedIngredientChange","name","isNaN","localStorage","setItem","JSON","stringify","storedRecipes","getItem","storedShoppingList","storedOwnedIngredients","removeItem","parse","Pancakes","Salad","componentDidMount","componentDidUpdate","prevProps","prevState","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","keys","length","entries","_ref","index","_ref2","className"],"sources":["/home/zhillyz/shoppingList/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const storedRecipes = localStorage.getItem('recipes');\n    const storedShoppingList = localStorage.getItem('shoppingList');\n    const storedOwnedIngredients = localStorage.getItem('ownedIngredients');\n\n    // Clear the stored shopping list and owned ingredients\n    localStorage.removeItem('shoppingList');\n    localStorage.removeItem('ownedIngredients');\n\n    this.state = {\n      recipes: storedRecipes ? JSON.parse(storedRecipes) : {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper'],\n      },\n      currentRecipe: '',\n      shoppingList: {},\n      ownedIngredients: storedOwnedIngredients ? JSON.parse(storedOwnedIngredients) : {},\n    };\n  }\n\n  componentDidMount() {\n    this.updateShoppingListFromOwnedIngredients();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.ownedIngredients !== this.state.ownedIngredients) {\n      this.updateShoppingListFromOwnedIngredients();\n    }\n  }\n\n  updateShoppingListFromOwnedIngredients = () => {\n    const { recipes, ownedIngredients } = this.state;\n    const updatedShoppingList = {};\n\n    Object.values(recipes).forEach((recipeIngredients) => {\n      recipeIngredients.forEach((ingredient) => {\n        const spaceIndex = ingredient.indexOf(' ');\n        let quantity;\n        let ingredientName;\n\n        if (spaceIndex === -1) {\n          quantity = '1';\n          ingredientName = ingredient;\n        } else {\n          quantity = ingredient.slice(0, spaceIndex);\n          ingredientName = ingredient.slice(spaceIndex + 1);\n        }\n\n        const parsedQuantity = this.parseQuantity(quantity);\n\n        if (!ownedIngredients[ingredientName]) {\n          if (updatedShoppingList[ingredientName]) {\n            updatedShoppingList[ingredientName] += parsedQuantity;\n          } else {\n            updatedShoppingList[ingredientName] = parsedQuantity;\n          }\n        }\n      });\n    });\n\n    this.setState({ shoppingList: updatedShoppingList });\n  };\n\n  handleRecipeChange = (event) => {\n    this.setState({ currentRecipe: event.target.value });\n  };\n\n  addRecipe = () => {\n    const { recipes, currentRecipe } = this.state;\n\n    if (currentRecipe.trim() === '') {\n      return;\n    }\n\n    const recipeIngredients = recipes[currentRecipe];\n    if (recipeIngredients) {\n      this.updateShoppingList(recipeIngredients);\n    } else {\n      const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n      if (confirmAddRecipe) {\n        this.addNewRecipe(currentRecipe);\n      }\n    }\n  };\n\n  updateShoppingList = (ingredients) => {\n    const { shoppingList, ownedIngredients } = this.state;\n    const updatedShoppingList = { ...shoppingList };\n\n    ingredients.forEach((ingredient) => {\n      const spaceIndex = ingredient.indexOf(' ');\n      let quantity;\n      let ingredientName;\n\n      if (spaceIndex === -1) {\n        quantity = '1';\n        ingredientName = ingredient;\n      } else {\n        quantity = ingredient.slice(0, spaceIndex);\n        ingredientName = ingredient.slice(spaceIndex + 1);\n      }\n\n      const parsedQuantity = this.parseQuantity(quantity);\n\n      if (ownedIngredients[ingredientName]) {\n        const remainingQuantity = ownedIngredients[ingredientName] - parsedQuantity;\n\n        if (remainingQuantity <= 0) {\n          delete ownedIngredients[ingredientName];\n        } else {\n          ownedIngredients[ingredientName] = remainingQuantity;\n        }\n      } else {\n        if (updatedShoppingList[ingredientName]) {\n          updatedShoppingList[ingredientName] += parsedQuantity;\n        } else {\n          updatedShoppingList[ingredientName] = parsedQuantity;\n        }\n      }\n    });\n\n    this.setState({\n      currentRecipe: '',\n      shoppingList: updatedShoppingList,\n      ownedIngredients: { ...ownedIngredients },\n    }, () => {\n      this.updateLocalStorage();\n    });\n  };\n\n  addNewRecipe = (recipeName) => {\n    const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n\n    if (ingredients) {\n      const recipeIngredients = ingredients.split(',').map((ingredient) => ingredient.trim());\n      const { recipes } = this.state;\n\n      const updatedRecipes = { ...recipes, [recipeName]: recipeIngredients };\n      this.setState({ recipes: updatedRecipes }, () => {\n        this.updateShoppingList(recipeIngredients);\n      });\n    }\n  };\n\n  clearShoppingList = () => {\n    this.setState({ shoppingList: {} }, () => {\n      this.updateLocalStorage();\n    });\n  };\n\n  parseQuantity = (quantity) => {\n    if (quantity.trim() === '') {\n      return 1; // Default to 1 if no quantity is provided\n    }\n\n    if (quantity.includes('/')) {\n      const [numerator, denominator] = quantity.split('/');\n      return parseFloat(numerator) / parseFloat(denominator);\n    }\n\n    return parseFloat(quantity);\n  };\n\n  handleOwnedIngredientChange = (event) => {\n    const { value, name } = event.target;\n    const { ownedIngredients } = this.state;\n    const parsedQuantity = parseFloat(value);\n\n    if (isNaN(parsedQuantity)) {\n      delete ownedIngredients[name];\n    } else {\n      ownedIngredients[name] = parsedQuantity;\n    }\n\n    this.setState({ ownedIngredients: { ...ownedIngredients } }, () => {\n      this.updateShoppingListFromOwnedIngredients();\n      this.updateLocalStorage();\n    });\n  };\n\n  updateLocalStorage = () => {\n    const { recipes, shoppingList, ownedIngredients } = this.state;\n\n    localStorage.setItem('recipes', JSON.stringify(recipes));\n    localStorage.setItem('shoppingList', JSON.stringify(shoppingList));\n    localStorage.setItem('ownedIngredients', JSON.stringify(ownedIngredients));\n  };\n\n  render() {\n    const { currentRecipe, shoppingList, recipes, ownedIngredients } = this.state;\n\n    return (\n      <div>\n        <h1>Recipe App</h1>\n        <div>\n          <input type=\"text\" value={currentRecipe} onChange={this.handleRecipeChange} />\n          <button onClick={this.addRecipe}>Add Recipe</button>\n        </div>\n        <div>\n          <h2>Shopping List</h2>\n          {Object.keys(shoppingList).length === 0 ? (\n            <p>No items in the shopping list</p>\n          ) : (\n            <div>\n              <ul>\n                {Object.entries(shoppingList).map(([ingredient, quantity], index) => (\n                  <li key={index}>\n                    {quantity} {ingredient}\n                  </li>\n                ))}\n              </ul>\n              <button onClick={this.clearShoppingList}>Clear Shopping List</button>\n            </div>\n          )}\n        </div>\n        <div>\n          <h2>Owned Ingredients</h2>\n          {Object.keys(ownedIngredients).length === 0 ? (\n            <p>No owned ingredients</p>\n          ) : (\n            <div>\n              <ul>\n                {Object.entries(ownedIngredients).map(([ingredient, quantity], index) => (\n                  <li key={index}>\n                    <input\n                      type=\"number\"\n                      value={quantity}\n                      name={ingredient}\n                      onChange={this.handleOwnedIngredientChange}\n                    />\n                    {ingredient}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n        <div className=\"recipe-container\">\n          <div className=\"stored-recipes\">\n            <h2>Stored Recipes</h2>\n            {Object.keys(recipes).length === 0 ? (\n              <p>No recipes stored</p>\n            ) : (\n              <div>\n                {Object.keys(recipes).map((recipeName, index) => (\n                  <div\n                    key={index}\n                    className=\"recipe-box\"\n                    onClick={() => this.updateShoppingList(recipes[recipeName])}\n                  >\n                    {recipeName}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RecipeApp;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}