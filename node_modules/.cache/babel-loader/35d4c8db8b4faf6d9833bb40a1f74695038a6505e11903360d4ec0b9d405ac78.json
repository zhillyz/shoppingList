{"ast":null,"code":"var _ = require('underscore');\nvar arrayDiff = require('array-diff')();\nvar groupAndSplit = function (diff, split) {\n  var deleted = [];\n  var added = [];\n  var equal = [];\n  var indexBefore = 0,\n    indexAfter = 0;\n  diff.forEach(function (each) {\n    switch (each[0]) {\n      case '=':\n        equal.push({\n          before: indexBefore,\n          value: each[1],\n          pos: indexAfter\n        });\n        indexBefore++;\n        indexAfter++;\n        break;\n      case '-':\n        deleted.push({\n          before: indexBefore,\n          value: split(each[1])\n        });\n        indexBefore++;\n        break;\n      case '+':\n        added.push({\n          value: split(each[1]),\n          pos: indexAfter\n        });\n        indexAfter++;\n    }\n  });\n  return {\n    equal: equal,\n    deleted: deleted,\n    added: added\n  };\n};\nvar matchModifiedValues = function (deleted, added, minRatio) {\n  var matches = [];\n  added.forEach(function (entryAfter) {\n    var takeBestEqualRatio = function (bestCandidate, entryBefore) {\n      var diff = arrayDiff(entryBefore.value, entryAfter.value);\n      var sumEquals = function (previous, each) {\n        return each[0] == '=' ? previous + 1 : previous;\n      };\n      var equalRatio = diff.reduce(sumEquals, 0) / diff.length;\n      return equalRatio > bestCandidate.ratio ? {\n        ratio: equalRatio,\n        entry: entryBefore\n      } : bestCandidate;\n    };\n    var bestCandidate = deleted.reduce(takeBestEqualRatio, {\n      ratio: minRatio,\n      entry: {}\n    });\n    entryAfter.before = bestCandidate.entry.before;\n    matches.push(entryAfter);\n  });\n  return matches;\n};\nvar match = function (before, after, options) {\n  options = options || {};\n  var minRatio = options.minRatio || 0.5;\n  var diff = arrayDiff(before, after);\n  var grouped = groupAndSplit(diff, options.split);\n  var fuzzyMatches = matchModifiedValues(grouped.deleted, grouped.added, minRatio).map(function (each) {\n    return {\n      value: after[each.pos],\n      before: each.before,\n      pos: each.pos\n    };\n  });\n  return grouped.equal.concat(fuzzyMatches).sort(function (a, b) {\n    return a.pos > b.pos;\n  }).map(function (each) {\n    return {\n      before: each.before,\n      value: each.value\n    };\n  });\n};\nmodule.exports = match;","map":{"version":3,"names":["_","require","arrayDiff","groupAndSplit","diff","split","deleted","added","equal","indexBefore","indexAfter","forEach","each","push","before","value","pos","matchModifiedValues","minRatio","matches","entryAfter","takeBestEqualRatio","bestCandidate","entryBefore","sumEquals","previous","equalRatio","reduce","length","ratio","entry","match","after","options","grouped","fuzzyMatches","map","concat","sort","a","b","module","exports"],"sources":["/home/zhillyz/shoppingList/node_modules/fuzzy-match/index.js"],"sourcesContent":["\nvar _ = require('underscore')\nvar arrayDiff = require('array-diff')()\n\nvar groupAndSplit = function(diff, split) {\n  var deleted = []\n  var added = []\n  var equal = []\n  var indexBefore = 0, indexAfter = 0\n  diff.forEach(function(each) {\n    switch (each[0]) {\n      case '=':\n        equal.push({before: indexBefore, value: each[1], pos: indexAfter})\n        indexBefore++; indexAfter++\n        break\n      case '-':\n        deleted.push({before: indexBefore, value: split(each[1])})\n        indexBefore++\n        break\n      case '+':\n        added.push({value: split(each[1]), pos: indexAfter})\n        indexAfter++\n    }\n  })\n  return {equal: equal, deleted: deleted, added: added}\n}\n\nvar matchModifiedValues = function(deleted, added, minRatio) {\n  var matches = []\n  added.forEach(function(entryAfter) {\n    var takeBestEqualRatio = function(bestCandidate, entryBefore) {\n      var diff = arrayDiff(entryBefore.value, entryAfter.value)\n      var sumEquals = function(previous, each) { return each[0] == '=' ? previous+1 : previous }\n      var equalRatio = diff.reduce(sumEquals, 0) / diff.length\n      return equalRatio > bestCandidate.ratio ? {ratio: equalRatio, entry: entryBefore} : bestCandidate\n    }\n    var bestCandidate = deleted.reduce(takeBestEqualRatio, {ratio: minRatio, entry:{}})\n    entryAfter.before = bestCandidate.entry.before\n    matches.push(entryAfter)\n  })\n  return matches\n}\n\nvar match = function(before, after, options) {\n  options = options || {}\n  var minRatio = options.minRatio || 0.5\n  var diff = arrayDiff(before, after)\n  var grouped = groupAndSplit(diff, options.split)\n  var fuzzyMatches = matchModifiedValues(grouped.deleted, grouped.added, minRatio)\n    .map(function(each) { return {value:after[each.pos], before: each.before, pos: each.pos }})\n  return grouped.equal.concat(fuzzyMatches)\n    .sort(function(a, b) { return a.pos > b.pos })\n    .map(function(each) { return {before: each.before, value: each.value} })\n}\n\nmodule.exports = match\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}