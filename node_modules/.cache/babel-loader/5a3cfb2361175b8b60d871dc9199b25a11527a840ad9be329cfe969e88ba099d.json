{"ast":null,"code":"var _jsxFileName = \"/home/zhillyz/shoppingList/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateLocalStorage = () => {\n      const {\n        recipes,\n        shoppingList,\n        ownedIngredients\n      } = this.state;\n      localStorage.setItem('recipes', JSON.stringify(recipes));\n      localStorage.setItem('shoppingList', JSON.stringify(shoppingList));\n      localStorage.setItem('ownedIngredients', JSON.stringify(ownedIngredients));\n    };\n    this.handleRecipeChange = event => {\n      this.setState({\n        currentRecipe: event.target.value\n      });\n    };\n    this.addRecipe = () => {\n      const {\n        recipes,\n        currentRecipe\n      } = this.state;\n      if (currentRecipe.trim() === '') {\n        return;\n      }\n      const trimmedRecipeName = currentRecipe.trim();\n      const recipeIngredients = [...recipes[trimmedRecipeName]]; // Pass a copy of the recipe ingredients array\n\n      if (recipeIngredients) {\n        this.updateShoppingList(recipeIngredients);\n        this.addUsedIngredients(recipeIngredients);\n      } else {\n        const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n        if (confirmAddRecipe) {\n          this.addNewRecipe(trimmedRecipeName);\n        }\n      }\n    };\n    this.addUsedIngredients = ingredients => {\n      const {\n        usedIngredients\n      } = this.state;\n      ingredients.forEach(ingredient => {\n        const spaceIndex = ingredient.indexOf(' ');\n        let quantity;\n        let ingredientName;\n        if (spaceIndex === -1) {\n          quantity = '1';\n          ingredientName = ingredient;\n        } else {\n          quantity = ingredient.slice(0, spaceIndex);\n          ingredientName = ingredient.slice(spaceIndex + 1);\n        }\n        const parsedQuantity = this.parseQuantity(quantity);\n        if (usedIngredients[ingredientName]) {\n          usedIngredients[ingredientName] += parsedQuantity;\n        } else {\n          usedIngredients[ingredientName] = parsedQuantity;\n        }\n      });\n      this.setState({\n        usedIngredients\n      });\n    };\n    this.updateShoppingList = ingredients => {\n      const {\n        ownedIngredients,\n        usedIngredients\n      } = this.state;\n      const updatedShoppingList = {\n        ...this.state.shoppingList\n      };\n      ingredients.forEach(ingredient => {\n        const spaceIndex = ingredient.indexOf(' ');\n        let quantity;\n        let ingredientName;\n        if (spaceIndex === -1) {\n          quantity = '1';\n          ingredientName = ingredient;\n        } else {\n          quantity = ingredient.slice(0, spaceIndex);\n          ingredientName = ingredient.slice(spaceIndex + 1);\n        }\n        const parsedQuantity = this.parseQuantity(quantity);\n        const ownedQuantity = ownedIngredients[ingredientName] ? ownedIngredients[ingredientName].quantity : 0;\n        const usedQuantity = usedIngredients[ingredientName] ? usedIngredients[ingredientName] : 0;\n        const requiredQuantity = Math.max(parsedQuantity - ownedQuantity - usedQuantity, 0);\n        if (updatedShoppingList[ingredientName]) {\n          updatedShoppingList[ingredientName] += requiredQuantity;\n        } else {\n          updatedShoppingList[ingredientName] = requiredQuantity;\n        }\n      });\n      this.setState({\n        currentRecipe: '',\n        shoppingList: updatedShoppingList\n      }, () => {\n        this.updateLocalStorage();\n      });\n    };\n    this.addNewRecipe = recipeName => {\n      const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n      if (ingredients) {\n        const recipeIngredients = ingredients.split(',').map(ingredient => ingredient.trim());\n        const {\n          recipes,\n          ownedIngredients,\n          shoppingList\n        } = this.state;\n        const updatedRecipes = {\n          ...recipes,\n          [recipeName]: recipeIngredients\n        };\n        const filteredIngredients = recipeIngredients.filter(ingredient => !ownedIngredients[ingredient]);\n        const updatedShoppingList = {\n          ...shoppingList\n        };\n        filteredIngredients.forEach(ingredient => {\n          if (updatedShoppingList[ingredient]) {\n            updatedShoppingList[ingredient] += 1;\n          } else {\n            updatedShoppingList[ingredient] = 1;\n          }\n        });\n        this.setState({\n          recipes: updatedRecipes,\n          shoppingList: updatedShoppingList\n        }, () => {\n          this.updateLocalStorage();\n        });\n      }\n    };\n    this.clearShoppingList = () => {\n      this.setState({\n        shoppingList: {},\n        usedIngredients: {}\n      }, () => {\n        this.updateLocalStorage();\n      });\n    };\n    this.parseQuantity = quantity => {\n      if (quantity.trim() === '') {\n        return 1; // Default to 1 if no quantity is provided\n      }\n\n      if (quantity.includes('/')) {\n        const [numerator, denominator] = quantity.split('/');\n        return parseFloat(numerator) / parseFloat(denominator);\n      }\n      return parseFloat(quantity);\n    };\n    this.addOwnedIngredient = () => {\n      const {\n        ownedIngredients,\n        shoppingList\n      } = this.state;\n      const ingredient = this.ownedIngredientInput.value.trim();\n      if (ingredient !== '') {\n        const updatedOwnedIngredients = {\n          ...ownedIngredients\n        };\n        updatedOwnedIngredients[ingredient] = {\n          quantity: 1\n        };\n        const updatedShoppingList = {\n          ...shoppingList\n        };\n        if (!updatedShoppingList[ingredient]) {\n          updatedShoppingList[ingredient] = 0;\n        }\n        this.setState({\n          ownedIngredients: updatedOwnedIngredients,\n          shoppingList: updatedShoppingList\n        }, () => {\n          this.updateLocalStorage();\n          this.ownedIngredientInput.value = '';\n        });\n      }\n    };\n    this.handleOwnedIngredientChange = (ingredient, event) => {\n      const {\n        ownedIngredients,\n        shoppingList\n      } = this.state;\n      const quantity = event.target.value.trim();\n      if (quantity === '0') {\n        // Remove the ingredient from owned ingredients and shopping list\n        const updatedOwnedIngredients = {\n          ...ownedIngredients\n        };\n        delete updatedOwnedIngredients[ingredient];\n        const updatedShoppingList = {\n          ...shoppingList\n        };\n        delete updatedShoppingList[ingredient];\n        this.setState({\n          ownedIngredients: updatedOwnedIngredients,\n          shoppingList: updatedShoppingList\n        }, () => {\n          this.updateLocalStorage();\n        });\n      } else {\n        // Update the quantity of the owned ingredient\n        const updatedOwnedIngredients = {\n          ...ownedIngredients\n        };\n        updatedOwnedIngredients[ingredient] = {\n          quantity: parseFloat(quantity)\n        };\n        this.setState({\n          ownedIngredients: updatedOwnedIngredients\n        }, () => {\n          this.updateLocalStorage();\n        });\n      }\n    };\n    const storedRecipes = localStorage.getItem('recipes');\n    const storedShoppingList = localStorage.getItem('shoppingList');\n    const storedOwnedIngredients = localStorage.getItem('ownedIngredients');\n\n    // Clear the stored shopping list\n    localStorage.removeItem('shoppingList');\n    this.state = {\n      recipes: storedRecipes ? JSON.parse(storedRecipes) : {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper']\n      },\n      currentRecipe: '',\n      shoppingList: {},\n      ownedIngredients: {}\n    };\n  }\n  componentDidUpdate() {\n    this.updateLocalStorage();\n  }\n  render() {\n    const {\n      currentRecipe,\n      shoppingList,\n      recipes,\n      ownedIngredients\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recipe App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentRecipe,\n          onChange: this.handleRecipeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addRecipe,\n          children: \"Add Recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shopping List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), Object.keys(shoppingList).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No items in the shopping list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(shoppingList).map((_ref, index) => {\n              let [ingredient, quantity] = _ref;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [quantity, \" \", ingredient]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.clearShoppingList,\n            children: \"Clear Shopping List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Owned Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), Object.keys(ownedIngredients).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No owned ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(ownedIngredients).map((_ref2, index) => {\n              let [ingredient, data] = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"0\",\n                  value: data.quantity,\n                  onChange: event => this.handleOwnedIngredientChange(ingredient, event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this), ' ', ingredient]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: input => this.ownedIngredientInput = input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addOwnedIngredient,\n            children: \"Add Owned Ingredient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stored-recipes\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Stored Recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), Object.keys(recipes).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No recipes stored\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: Object.keys(recipes).map((recipeName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-box\",\n              onClick: () => this.updateShoppingList(recipes[recipeName]),\n              children: recipeName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default RecipeApp;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RecipeApp","Component","constructor","props","updateLocalStorage","recipes","shoppingList","ownedIngredients","state","localStorage","setItem","JSON","stringify","handleRecipeChange","event","setState","currentRecipe","target","value","addRecipe","trim","trimmedRecipeName","recipeIngredients","updateShoppingList","addUsedIngredients","confirmAddRecipe","window","confirm","addNewRecipe","ingredients","usedIngredients","forEach","ingredient","spaceIndex","indexOf","quantity","ingredientName","slice","parsedQuantity","parseQuantity","updatedShoppingList","ownedQuantity","usedQuantity","requiredQuantity","Math","max","recipeName","prompt","split","map","updatedRecipes","filteredIngredients","filter","clearShoppingList","includes","numerator","denominator","parseFloat","addOwnedIngredient","ownedIngredientInput","updatedOwnedIngredients","handleOwnedIngredientChange","storedRecipes","getItem","storedShoppingList","storedOwnedIngredients","removeItem","parse","Pancakes","Salad","componentDidUpdate","render","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","Object","keys","length","entries","_ref","index","_ref2","data","min","ref","input","className"],"sources":["/home/zhillyz/shoppingList/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass RecipeApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const storedRecipes = localStorage.getItem('recipes');\n    const storedShoppingList = localStorage.getItem('shoppingList');\n    const storedOwnedIngredients = localStorage.getItem('ownedIngredients');\n\n    // Clear the stored shopping list\n    localStorage.removeItem('shoppingList');\n\n    this.state = {\n      recipes: storedRecipes ? JSON.parse(storedRecipes) : {\n        Pancakes: ['1 cup Flour', '1 cup Milk', '2 Eggs', '2 tbsp Butter', '1/4 tsp Salt', '1 tbsp Sugar'],\n        Salad: ['1 head Lettuce', '2 Tomatoes', '1 Cucumber', '1/2 Onion', '2 tbsp Olive Oil', '1 tbsp Vinegar', 'Salt', 'Pepper'],\n      },\n      currentRecipe: '',\n      shoppingList: {},\n      ownedIngredients: {},\n    };\n  }\n\n  componentDidUpdate() {\n    this.updateLocalStorage();\n  }\n\n  updateLocalStorage = () => {\n    const { recipes, shoppingList, ownedIngredients } = this.state;\n    localStorage.setItem('recipes', JSON.stringify(recipes));\n    localStorage.setItem('shoppingList', JSON.stringify(shoppingList));\n    localStorage.setItem('ownedIngredients', JSON.stringify(ownedIngredients));\n  };\n\n  handleRecipeChange = (event) => {\n    this.setState({ currentRecipe: event.target.value });\n  };\n\n  addRecipe = () => {\n    const { recipes, currentRecipe } = this.state;\n  \n    if (currentRecipe.trim() === '') {\n      return;\n    }\n  \n    const trimmedRecipeName = currentRecipe.trim();\n    const recipeIngredients = [...recipes[trimmedRecipeName]]; // Pass a copy of the recipe ingredients array\n  \n    if (recipeIngredients) {\n      this.updateShoppingList(recipeIngredients);\n      this.addUsedIngredients(recipeIngredients);\n    } else {\n      const confirmAddRecipe = window.confirm('Recipe not found. Do you want to add it?');\n      if (confirmAddRecipe) {\n        this.addNewRecipe(trimmedRecipeName);\n      }\n    }\n  };\n  \n  \n  \n\n  addUsedIngredients = (ingredients) => {\n    const { usedIngredients } = this.state;\n  \n    ingredients.forEach((ingredient) => {\n      const spaceIndex = ingredient.indexOf(' ');\n      let quantity;\n      let ingredientName;\n  \n      if (spaceIndex === -1) {\n        quantity = '1';\n        ingredientName = ingredient;\n      } else {\n        quantity = ingredient.slice(0, spaceIndex);\n        ingredientName = ingredient.slice(spaceIndex + 1);\n      }\n  \n      const parsedQuantity = this.parseQuantity(quantity);\n  \n      if (usedIngredients[ingredientName]) {\n        usedIngredients[ingredientName] += parsedQuantity;\n      } else {\n        usedIngredients[ingredientName] = parsedQuantity;\n      }\n    });\n  \n    this.setState({ usedIngredients });\n  };\n  \n\n  updateShoppingList = (ingredients) => {\n    const { ownedIngredients, usedIngredients } = this.state;\n    const updatedShoppingList = { ...this.state.shoppingList };\n  \n    ingredients.forEach((ingredient) => {\n      const spaceIndex = ingredient.indexOf(' ');\n      let quantity;\n      let ingredientName;\n  \n      if (spaceIndex === -1) {\n        quantity = '1';\n        ingredientName = ingredient;\n      } else {\n        quantity = ingredient.slice(0, spaceIndex);\n        ingredientName = ingredient.slice(spaceIndex + 1);\n      }\n  \n      const parsedQuantity = this.parseQuantity(quantity);\n      const ownedQuantity = ownedIngredients[ingredientName] ? ownedIngredients[ingredientName].quantity : 0;\n      const usedQuantity = usedIngredients[ingredientName] ? usedIngredients[ingredientName] : 0;\n  \n      const requiredQuantity = Math.max(parsedQuantity - ownedQuantity - usedQuantity, 0);\n  \n      if (updatedShoppingList[ingredientName]) {\n        updatedShoppingList[ingredientName] += requiredQuantity;\n      } else {\n        updatedShoppingList[ingredientName] = requiredQuantity;\n      }\n    });\n  \n    this.setState(\n      {\n        currentRecipe: '',\n        shoppingList: updatedShoppingList,\n      },\n      () => {\n        this.updateLocalStorage();\n      }\n    );\n  };\n  \n  \n  \n  \n  addNewRecipe = (recipeName) => {\n    const ingredients = window.prompt('Enter the ingredients (separated by commas):');\n\n    if (ingredients) {\n      const recipeIngredients = ingredients.split(',').map((ingredient) => ingredient.trim());\n      const { recipes, ownedIngredients, shoppingList } = this.state;\n\n      const updatedRecipes = { ...recipes, [recipeName]: recipeIngredients };\n      const filteredIngredients = recipeIngredients.filter((ingredient) => !ownedIngredients[ingredient]);\n\n      const updatedShoppingList = { ...shoppingList };\n      filteredIngredients.forEach((ingredient) => {\n        if (updatedShoppingList[ingredient]) {\n          updatedShoppingList[ingredient] += 1;\n        } else {\n          updatedShoppingList[ingredient] = 1;\n        }\n      });\n\n      this.setState(\n        {\n          recipes: updatedRecipes,\n          shoppingList: updatedShoppingList,\n        },\n        () => {\n          this.updateLocalStorage();\n        }\n      );\n    }\n  };\n\n  clearShoppingList = () => {\n    this.setState({ shoppingList: {}, usedIngredients: {} }, () => {\n      this.updateLocalStorage();\n    });\n  };\n  \n\n  parseQuantity = (quantity) => {\n    if (quantity.trim() === '') {\n      return 1; // Default to 1 if no quantity is provided\n    }\n\n    if (quantity.includes('/')) {\n      const [numerator, denominator] = quantity.split('/');\n      return parseFloat(numerator) / parseFloat(denominator);\n    }\n\n    return parseFloat(quantity);\n  };\n\n  addOwnedIngredient = () => {\n    const { ownedIngredients, shoppingList } = this.state;\n    const ingredient = this.ownedIngredientInput.value.trim();\n\n    if (ingredient !== '') {\n      const updatedOwnedIngredients = { ...ownedIngredients };\n      updatedOwnedIngredients[ingredient] = {\n        quantity: 1,\n      };\n\n      const updatedShoppingList = { ...shoppingList };\n      if (!updatedShoppingList[ingredient]) {\n        updatedShoppingList[ingredient] = 0;\n      }\n\n      this.setState(\n        {\n          ownedIngredients: updatedOwnedIngredients,\n          shoppingList: updatedShoppingList,\n        },\n        () => {\n          this.updateLocalStorage();\n          this.ownedIngredientInput.value = '';\n        }\n      );\n    }\n  };\n\n  handleOwnedIngredientChange = (ingredient, event) => {\n    const { ownedIngredients, shoppingList } = this.state;\n    const quantity = event.target.value.trim();\n\n    if (quantity === '0') {\n      // Remove the ingredient from owned ingredients and shopping list\n      const updatedOwnedIngredients = { ...ownedIngredients };\n      delete updatedOwnedIngredients[ingredient];\n\n      const updatedShoppingList = { ...shoppingList };\n      delete updatedShoppingList[ingredient];\n\n      this.setState(\n        {\n          ownedIngredients: updatedOwnedIngredients,\n          shoppingList: updatedShoppingList,\n        },\n        () => {\n          this.updateLocalStorage();\n        }\n      );\n    } else {\n      // Update the quantity of the owned ingredient\n      const updatedOwnedIngredients = { ...ownedIngredients };\n      updatedOwnedIngredients[ingredient] = {\n        quantity: parseFloat(quantity),\n      };\n\n      this.setState(\n        {\n          ownedIngredients: updatedOwnedIngredients,\n        },\n        () => {\n          this.updateLocalStorage();\n        }\n      );\n    }\n  };\n\n  render() {\n    const { currentRecipe, shoppingList, recipes, ownedIngredients } = this.state;\n\n    return (\n      <div>\n        <h1>Recipe App</h1>\n        <div>\n          <input type=\"text\" value={currentRecipe} onChange={this.handleRecipeChange} />\n          <button onClick={this.addRecipe}>Add Recipe</button>\n        </div>\n        <div>\n          <h2>Shopping List</h2>\n          {Object.keys(shoppingList).length === 0 ? (\n            <p>No items in the shopping list</p>\n          ) : (\n            <div>\n              <ul>\n                {Object.entries(shoppingList).map(([ingredient, quantity], index) => (\n                  <li key={index}>\n                    {quantity} {ingredient}\n                  </li>\n                ))}\n              </ul>\n              <button onClick={this.clearShoppingList}>Clear Shopping List</button>\n            </div>\n          )}\n        </div>\n        <div>\n          <h2>Owned Ingredients</h2>\n          {Object.keys(ownedIngredients).length === 0 ? (\n            <p>No owned ingredients</p>\n          ) : (\n            <div>\n              <ul>\n                {Object.entries(ownedIngredients).map(([ingredient, data], index) => (\n                  <li key={index}>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      value={data.quantity}\n                      onChange={(event) => this.handleOwnedIngredientChange(ingredient, event)}\n                    />{' '}\n                    {ingredient}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          <div>\n            <input type=\"text\" ref={(input) => (this.ownedIngredientInput = input)} />\n            <button onClick={this.addOwnedIngredient}>Add Owned Ingredient</button>\n          </div>\n        </div>\n        <div className=\"recipe-container\">\n          <div className=\"stored-recipes\">\n            <h2>Stored Recipes</h2>\n            {Object.keys(recipes).length === 0 ? (\n              <p>No recipes stored</p>\n            ) : (\n              <div>\n                {Object.keys(recipes).map((recipeName, index) => (\n                  <div\n                    key={index}\n                    className=\"recipe-box\"\n                    onClick={() => this.updateShoppingList(recipes[recipeName])}\n                  >\n                    {recipeName}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RecipeApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}